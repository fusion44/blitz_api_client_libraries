/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BtcNetwork
 */
export interface BtcNetwork {
    /**
     * Which network is in use (ipv4, ipv6 or onion)
     * @type {string}
     * @memberof BtcNetwork
     */
    name: string;
    /**
     * Is the network limited using - onlynet?
     * @type {boolean}
     * @memberof BtcNetwork
     */
    limited: boolean;
    /**
     * Is the network reachable?
     * @type {boolean}
     * @memberof BtcNetwork
     */
    reachable: boolean;
    /**
     * host:port of the proxy that is used for this network, or empty if none
     * @type {string}
     * @memberof BtcNetwork
     */
    proxy?: string;
    /**
     * Whether randomized credentials are used
     * @type {boolean}
     * @memberof BtcNetwork
     */
    proxyRandomizeCredentials: boolean;
}

/**
 * Check if a given object implements the BtcNetwork interface.
 */
export function instanceOfBtcNetwork(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "limited" in value;
    isInstance = isInstance && "reachable" in value;
    isInstance = isInstance && "proxyRandomizeCredentials" in value;

    return isInstance;
}

export function BtcNetworkFromJSON(json: any): BtcNetwork {
    return BtcNetworkFromJSONTyped(json, false);
}

export function BtcNetworkFromJSONTyped(json: any, ignoreDiscriminator: boolean): BtcNetwork {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'limited': json['limited'],
        'reachable': json['reachable'],
        'proxy': !exists(json, 'proxy') ? undefined : json['proxy'],
        'proxyRandomizeCredentials': json['proxy_randomize_credentials'],
    };
}

export function BtcNetworkToJSON(value?: BtcNetwork | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'limited': value.limited,
        'reachable': value.reachable,
        'proxy': value.proxy,
        'proxy_randomize_credentials': value.proxyRandomizeCredentials,
    };
}

