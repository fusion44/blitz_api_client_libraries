/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LightningInfoLite
 */
export interface LightningInfoLite {
    /**
     * Lightning software implementation (LND, c-lightning)
     * @type {string}
     * @memberof LightningInfoLite
     */
    implementation: string;
    /**
     * Version of the implementation
     * @type {string}
     * @memberof LightningInfoLite
     */
    version: string;
    /**
     * The identity pubkey of the current node
     * @type {string}
     * @memberof LightningInfoLite
     */
    identityPubkey: string;
    /**
     * Number of pending channels
     * @type {number}
     * @memberof LightningInfoLite
     */
    numPendingChannels: number;
    /**
     * Number of active channels
     * @type {number}
     * @memberof LightningInfoLite
     */
    numActiveChannels: number;
    /**
     * Number of inactive channels
     * @type {number}
     * @memberof LightningInfoLite
     */
    numInactiveChannels: number;
    /**
     * Number of peers
     * @type {number}
     * @memberof LightningInfoLite
     */
    numPeers: number;
    /**
     * The node's current view of the height of the best block
     * @type {number}
     * @memberof LightningInfoLite
     */
    blockHeight: number;
    /**
     * Whether the wallet's view is synced to the main chain
     * @type {boolean}
     * @memberof LightningInfoLite
     */
    syncedToChain?: boolean;
    /**
     * Whether we consider ourselves synced with the public channel graph.
     * @type {boolean}
     * @memberof LightningInfoLite
     */
    syncedToGraph?: boolean;
}

/**
 * Check if a given object implements the LightningInfoLite interface.
 */
export function instanceOfLightningInfoLite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "implementation" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "identityPubkey" in value;
    isInstance = isInstance && "numPendingChannels" in value;
    isInstance = isInstance && "numActiveChannels" in value;
    isInstance = isInstance && "numInactiveChannels" in value;
    isInstance = isInstance && "numPeers" in value;
    isInstance = isInstance && "blockHeight" in value;

    return isInstance;
}

export function LightningInfoLiteFromJSON(json: any): LightningInfoLite {
    return LightningInfoLiteFromJSONTyped(json, false);
}

export function LightningInfoLiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): LightningInfoLite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'implementation': json['implementation'],
        'version': json['version'],
        'identityPubkey': json['identity_pubkey'],
        'numPendingChannels': json['num_pending_channels'],
        'numActiveChannels': json['num_active_channels'],
        'numInactiveChannels': json['num_inactive_channels'],
        'numPeers': json['num_peers'],
        'blockHeight': json['block_height'],
        'syncedToChain': !exists(json, 'synced_to_chain') ? undefined : json['synced_to_chain'],
        'syncedToGraph': !exists(json, 'synced_to_graph') ? undefined : json['synced_to_graph'],
    };
}

export function LightningInfoLiteToJSON(value?: LightningInfoLite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'implementation': value.implementation,
        'version': value.version,
        'identity_pubkey': value.identityPubkey,
        'num_pending_channels': value.numPendingChannels,
        'num_active_channels': value.numActiveChannels,
        'num_inactive_channels': value.numInactiveChannels,
        'num_peers': value.numPeers,
        'block_height': value.blockHeight,
        'synced_to_chain': value.syncedToChain,
        'synced_to_graph': value.syncedToGraph,
    };
}

