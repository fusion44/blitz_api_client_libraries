/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Amp } from './Amp';
import {
    AmpFromJSON,
    AmpFromJSONTyped,
    AmpToJSON,
} from './Amp';
import type { CustomRecordsEntry } from './CustomRecordsEntry';
import {
    CustomRecordsEntryFromJSON,
    CustomRecordsEntryFromJSONTyped,
    CustomRecordsEntryToJSON,
} from './CustomRecordsEntry';
import type { InvoiceHTLCState } from './InvoiceHTLCState';
import {
    InvoiceHTLCStateFromJSON,
    InvoiceHTLCStateFromJSONTyped,
    InvoiceHTLCStateToJSON,
} from './InvoiceHTLCState';

/**
 * 
 * @export
 * @interface InvoiceHTLC
 */
export interface InvoiceHTLC {
    /**
     * The channel ID over which the HTLC was received.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    chanId: number;
    /**
     * The index of the HTLC on the channel.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    htlcIndex: number;
    /**
     * The amount of the HTLC in msat.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    amtMsat: number;
    /**
     * The block height at which this HTLC was accepted.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    acceptHeight: number;
    /**
     * The time at which this HTLC was accepted.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    acceptTime: number;
    /**
     * The time at which this HTLC was resolved.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    resolveTime: number;
    /**
     * The block height at which this HTLC expires.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    expiryHeight: number;
    /**
     * The state of the HTLC.
     * @type {InvoiceHTLCState}
     * @memberof InvoiceHTLC
     */
    state: InvoiceHTLCState | null;
    /**
     * Custom tlv records.
     * @type {Array<CustomRecordsEntry>}
     * @memberof InvoiceHTLC
     */
    customRecords?: Array<CustomRecordsEntry>;
    /**
     * The total amount of the mpp payment in msat.
     * @type {number}
     * @memberof InvoiceHTLC
     */
    mppTotalAmtMsat: number;
    /**
     * 
     * @type {Amp}
     * @memberof InvoiceHTLC
     */
    amp?: Amp;
}

/**
 * Check if a given object implements the InvoiceHTLC interface.
 */
export function instanceOfInvoiceHTLC(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chanId" in value;
    isInstance = isInstance && "htlcIndex" in value;
    isInstance = isInstance && "amtMsat" in value;
    isInstance = isInstance && "acceptHeight" in value;
    isInstance = isInstance && "acceptTime" in value;
    isInstance = isInstance && "resolveTime" in value;
    isInstance = isInstance && "expiryHeight" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "mppTotalAmtMsat" in value;

    return isInstance;
}

export function InvoiceHTLCFromJSON(json: any): InvoiceHTLC {
    return InvoiceHTLCFromJSONTyped(json, false);
}

export function InvoiceHTLCFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceHTLC {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chanId': json['chan_id'],
        'htlcIndex': json['htlc_index'],
        'amtMsat': json['amt_msat'],
        'acceptHeight': json['accept_height'],
        'acceptTime': json['accept_time'],
        'resolveTime': json['resolve_time'],
        'expiryHeight': json['expiry_height'],
        'state': InvoiceHTLCStateFromJSON(json['state']),
        'customRecords': !exists(json, 'custom_records') ? undefined : ((json['custom_records'] as Array<any>).map(CustomRecordsEntryFromJSON)),
        'mppTotalAmtMsat': json['mpp_total_amt_msat'],
        'amp': !exists(json, 'amp') ? undefined : AmpFromJSON(json['amp']),
    };
}

export function InvoiceHTLCToJSON(value?: InvoiceHTLC | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chan_id': value.chanId,
        'htlc_index': value.htlcIndex,
        'amt_msat': value.amtMsat,
        'accept_height': value.acceptHeight,
        'accept_time': value.acceptTime,
        'resolve_time': value.resolveTime,
        'expiry_height': value.expiryHeight,
        'state': InvoiceHTLCStateToJSON(value.state),
        'custom_records': value.customRecords === undefined ? undefined : ((value.customRecords as Array<any>).map(CustomRecordsEntryToJSON)),
        'mpp_total_amt_msat': value.mppTotalAmtMsat,
        'amp': AmpToJSON(value.amp),
    };
}

