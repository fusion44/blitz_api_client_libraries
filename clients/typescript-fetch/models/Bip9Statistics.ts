/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Bip9Statistics
 */
export interface Bip9Statistics {
    /**
     * The length in blocks of the BIP9 signalling period
     * @type {number}
     * @memberof Bip9Statistics
     */
    period: number;
    /**
     * The number of blocks with the version bit set required to activate the feature
     * @type {number}
     * @memberof Bip9Statistics
     */
    threshold: number;
    /**
     * The number of blocks elapsed since the beginning of the current period
     * @type {number}
     * @memberof Bip9Statistics
     */
    elapsed: number;
    /**
     * The number of blocks with the version bit set in the current period
     * @type {number}
     * @memberof Bip9Statistics
     */
    count: number;
    /**
     * False if there are not enough blocks left in this period to pass activation threshold
     * @type {boolean}
     * @memberof Bip9Statistics
     */
    possible: boolean;
}

/**
 * Check if a given object implements the Bip9Statistics interface.
 */
export function instanceOfBip9Statistics(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "period" in value;
    isInstance = isInstance && "threshold" in value;
    isInstance = isInstance && "elapsed" in value;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "possible" in value;

    return isInstance;
}

export function Bip9StatisticsFromJSON(json: any): Bip9Statistics {
    return Bip9StatisticsFromJSONTyped(json, false);
}

export function Bip9StatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Bip9Statistics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'period': json['period'],
        'threshold': json['threshold'],
        'elapsed': json['elapsed'],
        'count': json['count'],
        'possible': json['possible'],
    };
}

export function Bip9StatisticsToJSON(value?: Bip9Statistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'period': value.period,
        'threshold': value.threshold,
        'elapsed': value.elapsed,
        'count': value.count,
        'possible': value.possible,
    };
}

