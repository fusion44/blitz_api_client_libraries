/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OnChainTransaction
 */
export interface OnChainTransaction {
    /**
     * The transaction hash
     * @type {string}
     * @memberof OnChainTransaction
     */
    txHash: string;
    /**
     * The transaction amount, denominated in satoshis
     * @type {number}
     * @memberof OnChainTransaction
     */
    amount: number;
    /**
     * The number of confirmations
     * @type {number}
     * @memberof OnChainTransaction
     */
    numConfirmations: number;
    /**
     * The height of the block this transaction was included in
     * @type {number}
     * @memberof OnChainTransaction
     */
    blockHeight: number;
    /**
     * Timestamp of this transaction
     * @type {number}
     * @memberof OnChainTransaction
     */
    timeStamp: number;
    /**
     * Fees paid for this transaction
     * @type {number}
     * @memberof OnChainTransaction
     */
    totalFees: number;
    /**
     * Addresses that received funds for this transaction
     * @type {Array<string>}
     * @memberof OnChainTransaction
     */
    destAddresses?: Array<string>;
    /**
     * An optional label that was set on transaction broadcast.
     * @type {string}
     * @memberof OnChainTransaction
     */
    label?: string;
}

/**
 * Check if a given object implements the OnChainTransaction interface.
 */
export function instanceOfOnChainTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "txHash" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "numConfirmations" in value;
    isInstance = isInstance && "blockHeight" in value;
    isInstance = isInstance && "timeStamp" in value;
    isInstance = isInstance && "totalFees" in value;

    return isInstance;
}

export function OnChainTransactionFromJSON(json: any): OnChainTransaction {
    return OnChainTransactionFromJSONTyped(json, false);
}

export function OnChainTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OnChainTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'txHash': json['tx_hash'],
        'amount': json['amount'],
        'numConfirmations': json['num_confirmations'],
        'blockHeight': json['block_height'],
        'timeStamp': json['time_stamp'],
        'totalFees': json['total_fees'],
        'destAddresses': !exists(json, 'dest_addresses') ? undefined : json['dest_addresses'],
        'label': !exists(json, 'label') ? undefined : json['label'],
    };
}

export function OnChainTransactionToJSON(value?: OnChainTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tx_hash': value.txHash,
        'amount': value.amount,
        'num_confirmations': value.numConfirmations,
        'block_height': value.blockHeight,
        'time_stamp': value.timeStamp,
        'total_fees': value.totalFees,
        'dest_addresses': value.destAddresses,
        'label': value.label,
    };
}

