/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AMPRecord } from './AMPRecord';
import {
    AMPRecordFromJSON,
    AMPRecordFromJSONTyped,
    AMPRecordToJSON,
} from './AMPRecord';
import type { CustomRecordsEntry } from './CustomRecordsEntry';
import {
    CustomRecordsEntryFromJSON,
    CustomRecordsEntryFromJSONTyped,
    CustomRecordsEntryToJSON,
} from './CustomRecordsEntry';
import type { Hop } from './Hop';
import {
    HopFromJSON,
    HopFromJSONTyped,
    HopToJSON,
} from './Hop';
import type { MPPRecord } from './MPPRecord';
import {
    MPPRecordFromJSON,
    MPPRecordFromJSONTyped,
    MPPRecordToJSON,
} from './MPPRecord';

/**
 * 
 * @export
 * @interface Route
 */
export interface Route {
    /**
     * 
     * @type {number}
     * @memberof Route
     */
    totalTimeLock: number;
    /**
     * 
     * @type {number}
     * @memberof Route
     */
    totalFees: number;
    /**
     * 
     * @type {number}
     * @memberof Route
     */
    totalAmt: number;
    /**
     * 
     * @type {Array<Hop>}
     * @memberof Route
     */
    hops: Array<Hop>;
    /**
     * 
     * @type {number}
     * @memberof Route
     */
    totalFeesMsat: number;
    /**
     * 
     * @type {number}
     * @memberof Route
     */
    totalAmtMsat: number;
    /**
     * 
     * @type {MPPRecord}
     * @memberof Route
     */
    mppRecord?: MPPRecord;
    /**
     * 
     * @type {AMPRecord}
     * @memberof Route
     */
    ampRecord?: AMPRecord;
    /**
     * 
     * @type {Array<CustomRecordsEntry>}
     * @memberof Route
     */
    customRecords: Array<CustomRecordsEntry>;
}

/**
 * Check if a given object implements the Route interface.
 */
export function instanceOfRoute(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalTimeLock" in value;
    isInstance = isInstance && "totalFees" in value;
    isInstance = isInstance && "totalAmt" in value;
    isInstance = isInstance && "hops" in value;
    isInstance = isInstance && "totalFeesMsat" in value;
    isInstance = isInstance && "totalAmtMsat" in value;
    isInstance = isInstance && "customRecords" in value;

    return isInstance;
}

export function RouteFromJSON(json: any): Route {
    return RouteFromJSONTyped(json, false);
}

export function RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Route {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalTimeLock': json['total_time_lock'],
        'totalFees': json['total_fees'],
        'totalAmt': json['total_amt'],
        'hops': ((json['hops'] as Array<any>).map(HopFromJSON)),
        'totalFeesMsat': json['total_fees_msat'],
        'totalAmtMsat': json['total_amt_msat'],
        'mppRecord': !exists(json, 'mpp_record') ? undefined : MPPRecordFromJSON(json['mpp_record']),
        'ampRecord': !exists(json, 'amp_record') ? undefined : AMPRecordFromJSON(json['amp_record']),
        'customRecords': ((json['custom_records'] as Array<any>).map(CustomRecordsEntryFromJSON)),
    };
}

export function RouteToJSON(value?: Route | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_time_lock': value.totalTimeLock,
        'total_fees': value.totalFees,
        'total_amt': value.totalAmt,
        'hops': ((value.hops as Array<any>).map(HopToJSON)),
        'total_fees_msat': value.totalFeesMsat,
        'total_amt_msat': value.totalAmtMsat,
        'mpp_record': MPPRecordToJSON(value.mppRecord),
        'amp_record': AMPRecordToJSON(value.ampRecord),
        'custom_records': ((value.customRecords as Array<any>).map(CustomRecordsEntryToJSON)),
    };
}

