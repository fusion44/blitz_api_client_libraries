/**
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.BtcNetwork

import com.squareup.moshi.Json

/**
 * 
 *
 * @param blocks The height of the most-work fully-validated chain. The genesis block has height 0
 * @param headers The current number of headers we have validated
 * @param verificationProgress Estimate of verification progress[0..1]
 * @param difficulty The current difficulty
 * @param sizeOnDisk The estimated size of the block and undo files on disk
 * @param version The bitcoin core server version
 * @param subversion The server subversion string
 * @param connectionsIn The number of inbound connections
 * @param connectionsOut The number of outbound connections
 * @param networks Which networks are in use (ipv4, ipv6 or onion)
 */

data class BtcInfo (

    /* The height of the most-work fully-validated chain. The genesis block has height 0 */
    @Json(name = "blocks")
    val blocks: kotlin.Int,

    /* The current number of headers we have validated */
    @Json(name = "headers")
    val headers: kotlin.Int,

    /* Estimate of verification progress[0..1] */
    @Json(name = "verification_progress")
    val verificationProgress: java.math.BigDecimal,

    /* The current difficulty */
    @Json(name = "difficulty")
    val difficulty: kotlin.Int,

    /* The estimated size of the block and undo files on disk */
    @Json(name = "size_on_disk")
    val sizeOnDisk: kotlin.Int,

    /* The bitcoin core server version */
    @Json(name = "version")
    val version: kotlin.Int,

    /* The server subversion string */
    @Json(name = "subversion")
    val subversion: kotlin.String,

    /* The number of inbound connections */
    @Json(name = "connections_in")
    val connectionsIn: kotlin.Int,

    /* The number of outbound connections */
    @Json(name = "connections_out")
    val connectionsOut: kotlin.Int,

    /* Which networks are in use (ipv4, ipv6 or onion) */
    @Json(name = "networks")
    val networks: kotlin.collections.List<BtcNetwork>? = arrayListOf()

)

