/**
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param address The base58 or bech32 encoded bitcoin address to send coins to on-chain
 * @param amount The number of bitcoin denominated in satoshis to send
 * @param targetConf The number of blocks that the transaction *should* confirm in, will be used for fee estimation
 * @param satPerVbyte A manual fee expressed in sat/vbyte that should be used when crafting the transaction (default: 0)
 * @param minConfs The minimum number of confirmations each one of your outputs used for the transaction must satisfy
 * @param label A label for the transaction. Ignored by CLN backend.
 */

data class SendCoinsInput (

    /* The base58 or bech32 encoded bitcoin address to send coins to on-chain */
    @Json(name = "address")
    val address: kotlin.String,

    /* The number of bitcoin denominated in satoshis to send */
    @Json(name = "amount")
    val amount: kotlin.Int,

    /* The number of blocks that the transaction *should* confirm in, will be used for fee estimation */
    @Json(name = "target_conf")
    val targetConf: kotlin.Int? = null,

    /* A manual fee expressed in sat/vbyte that should be used when crafting the transaction (default: 0) */
    @Json(name = "sat_per_vbyte")
    val satPerVbyte: kotlin.Int? = null,

    /* The minimum number of confirmations each one of your outputs used for the transaction must satisfy */
    @Json(name = "min_confs")
    val minConfs: kotlin.Int? = 1,

    /* A label for the transaction. Ignored by CLN backend. */
    @Json(name = "label")
    val label: kotlin.String? = ""

)

