/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvoiceHTLC struct for InvoiceHTLC
type InvoiceHTLC struct {
	// The channel ID over which the HTLC was received.
	ChanId int32 `json:"chan_id"`
	// The index of the HTLC on the channel.
	HtlcIndex int32 `json:"htlc_index"`
	// The amount of the HTLC in msat.
	AmtMsat int32 `json:"amt_msat"`
	// The block height at which this HTLC was accepted.
	AcceptHeight int32 `json:"accept_height"`
	// The time at which this HTLC was accepted.
	AcceptTime int32 `json:"accept_time"`
	// The time at which this HTLC was resolved.
	ResolveTime int32 `json:"resolve_time"`
	// The block height at which this HTLC expires.
	ExpiryHeight int32 `json:"expiry_height"`
	// The state of the HTLC.
	State NullableInvoiceHTLCState `json:"state"`
	// Custom tlv records.
	CustomRecords []CustomRecordsEntry `json:"custom_records,omitempty"`
	// The total amount of the mpp payment in msat.
	MppTotalAmtMsat int32 `json:"mpp_total_amt_msat"`
	Amp *Amp `json:"amp,omitempty"`
}

// NewInvoiceHTLC instantiates a new InvoiceHTLC object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceHTLC(chanId int32, htlcIndex int32, amtMsat int32, acceptHeight int32, acceptTime int32, resolveTime int32, expiryHeight int32, state NullableInvoiceHTLCState, mppTotalAmtMsat int32) *InvoiceHTLC {
	this := InvoiceHTLC{}
	this.ChanId = chanId
	this.HtlcIndex = htlcIndex
	this.AmtMsat = amtMsat
	this.AcceptHeight = acceptHeight
	this.AcceptTime = acceptTime
	this.ResolveTime = resolveTime
	this.ExpiryHeight = expiryHeight
	this.State = state
	this.MppTotalAmtMsat = mppTotalAmtMsat
	return &this
}

// NewInvoiceHTLCWithDefaults instantiates a new InvoiceHTLC object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceHTLCWithDefaults() *InvoiceHTLC {
	this := InvoiceHTLC{}
	return &this
}

// GetChanId returns the ChanId field value
func (o *InvoiceHTLC) GetChanId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChanId
}

// GetChanIdOk returns a tuple with the ChanId field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetChanIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChanId, true
}

// SetChanId sets field value
func (o *InvoiceHTLC) SetChanId(v int32) {
	o.ChanId = v
}

// GetHtlcIndex returns the HtlcIndex field value
func (o *InvoiceHTLC) GetHtlcIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HtlcIndex
}

// GetHtlcIndexOk returns a tuple with the HtlcIndex field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetHtlcIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtlcIndex, true
}

// SetHtlcIndex sets field value
func (o *InvoiceHTLC) SetHtlcIndex(v int32) {
	o.HtlcIndex = v
}

// GetAmtMsat returns the AmtMsat field value
func (o *InvoiceHTLC) GetAmtMsat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AmtMsat
}

// GetAmtMsatOk returns a tuple with the AmtMsat field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetAmtMsatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmtMsat, true
}

// SetAmtMsat sets field value
func (o *InvoiceHTLC) SetAmtMsat(v int32) {
	o.AmtMsat = v
}

// GetAcceptHeight returns the AcceptHeight field value
func (o *InvoiceHTLC) GetAcceptHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AcceptHeight
}

// GetAcceptHeightOk returns a tuple with the AcceptHeight field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetAcceptHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptHeight, true
}

// SetAcceptHeight sets field value
func (o *InvoiceHTLC) SetAcceptHeight(v int32) {
	o.AcceptHeight = v
}

// GetAcceptTime returns the AcceptTime field value
func (o *InvoiceHTLC) GetAcceptTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AcceptTime
}

// GetAcceptTimeOk returns a tuple with the AcceptTime field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetAcceptTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptTime, true
}

// SetAcceptTime sets field value
func (o *InvoiceHTLC) SetAcceptTime(v int32) {
	o.AcceptTime = v
}

// GetResolveTime returns the ResolveTime field value
func (o *InvoiceHTLC) GetResolveTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResolveTime
}

// GetResolveTimeOk returns a tuple with the ResolveTime field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetResolveTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResolveTime, true
}

// SetResolveTime sets field value
func (o *InvoiceHTLC) SetResolveTime(v int32) {
	o.ResolveTime = v
}

// GetExpiryHeight returns the ExpiryHeight field value
func (o *InvoiceHTLC) GetExpiryHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiryHeight
}

// GetExpiryHeightOk returns a tuple with the ExpiryHeight field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetExpiryHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryHeight, true
}

// SetExpiryHeight sets field value
func (o *InvoiceHTLC) SetExpiryHeight(v int32) {
	o.ExpiryHeight = v
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for InvoiceHTLCState will be returned
func (o *InvoiceHTLC) GetState() InvoiceHTLCState {
	if o == nil || o.State.Get() == nil {
		var ret InvoiceHTLCState
		return ret
	}

	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceHTLC) GetStateOk() (*InvoiceHTLCState, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// SetState sets field value
func (o *InvoiceHTLC) SetState(v InvoiceHTLCState) {
	o.State.Set(&v)
}

// GetCustomRecords returns the CustomRecords field value if set, zero value otherwise.
func (o *InvoiceHTLC) GetCustomRecords() []CustomRecordsEntry {
	if o == nil || o.CustomRecords == nil {
		var ret []CustomRecordsEntry
		return ret
	}
	return o.CustomRecords
}

// GetCustomRecordsOk returns a tuple with the CustomRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetCustomRecordsOk() ([]CustomRecordsEntry, bool) {
	if o == nil || o.CustomRecords == nil {
		return nil, false
	}
	return o.CustomRecords, true
}

// HasCustomRecords returns a boolean if a field has been set.
func (o *InvoiceHTLC) HasCustomRecords() bool {
	if o != nil && o.CustomRecords != nil {
		return true
	}

	return false
}

// SetCustomRecords gets a reference to the given []CustomRecordsEntry and assigns it to the CustomRecords field.
func (o *InvoiceHTLC) SetCustomRecords(v []CustomRecordsEntry) {
	o.CustomRecords = v
}

// GetMppTotalAmtMsat returns the MppTotalAmtMsat field value
func (o *InvoiceHTLC) GetMppTotalAmtMsat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MppTotalAmtMsat
}

// GetMppTotalAmtMsatOk returns a tuple with the MppTotalAmtMsat field value
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetMppTotalAmtMsatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MppTotalAmtMsat, true
}

// SetMppTotalAmtMsat sets field value
func (o *InvoiceHTLC) SetMppTotalAmtMsat(v int32) {
	o.MppTotalAmtMsat = v
}

// GetAmp returns the Amp field value if set, zero value otherwise.
func (o *InvoiceHTLC) GetAmp() Amp {
	if o == nil || o.Amp == nil {
		var ret Amp
		return ret
	}
	return *o.Amp
}

// GetAmpOk returns a tuple with the Amp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceHTLC) GetAmpOk() (*Amp, bool) {
	if o == nil || o.Amp == nil {
		return nil, false
	}
	return o.Amp, true
}

// HasAmp returns a boolean if a field has been set.
func (o *InvoiceHTLC) HasAmp() bool {
	if o != nil && o.Amp != nil {
		return true
	}

	return false
}

// SetAmp gets a reference to the given Amp and assigns it to the Amp field.
func (o *InvoiceHTLC) SetAmp(v Amp) {
	o.Amp = &v
}

func (o InvoiceHTLC) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["chan_id"] = o.ChanId
	}
	if true {
		toSerialize["htlc_index"] = o.HtlcIndex
	}
	if true {
		toSerialize["amt_msat"] = o.AmtMsat
	}
	if true {
		toSerialize["accept_height"] = o.AcceptHeight
	}
	if true {
		toSerialize["accept_time"] = o.AcceptTime
	}
	if true {
		toSerialize["resolve_time"] = o.ResolveTime
	}
	if true {
		toSerialize["expiry_height"] = o.ExpiryHeight
	}
	if true {
		toSerialize["state"] = o.State.Get()
	}
	if o.CustomRecords != nil {
		toSerialize["custom_records"] = o.CustomRecords
	}
	if true {
		toSerialize["mpp_total_amt_msat"] = o.MppTotalAmtMsat
	}
	if o.Amp != nil {
		toSerialize["amp"] = o.Amp
	}
	return json.Marshal(toSerialize)
}

type NullableInvoiceHTLC struct {
	value *InvoiceHTLC
	isSet bool
}

func (v NullableInvoiceHTLC) Get() *InvoiceHTLC {
	return v.value
}

func (v *NullableInvoiceHTLC) Set(val *InvoiceHTLC) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceHTLC) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceHTLC) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceHTLC(val *InvoiceHTLC) *NullableInvoiceHTLC {
	return &NullableInvoiceHTLC{value: val, isSet: true}
}

func (v NullableInvoiceHTLC) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceHTLC) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


