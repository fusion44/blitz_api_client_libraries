/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HTLCAttemptFailure struct for HTLCAttemptFailure
type HTLCAttemptFailure struct {
	Code int32 `json:"code"`
	ChannelUpdate ChannelUpdate `json:"channel_update"`
	HtlcMsat int32 `json:"htlc_msat"`
	OnionSha256 string `json:"onion_sha_256"`
	CltvExpiry int32 `json:"cltv_expiry"`
	Flags int32 `json:"flags"`
	FailureSourceIndex int32 `json:"failure_source_index"`
	Height int32 `json:"height"`
}

// NewHTLCAttemptFailure instantiates a new HTLCAttemptFailure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHTLCAttemptFailure(code int32, channelUpdate ChannelUpdate, htlcMsat int32, onionSha256 string, cltvExpiry int32, flags int32, failureSourceIndex int32, height int32) *HTLCAttemptFailure {
	this := HTLCAttemptFailure{}
	this.Code = code
	this.ChannelUpdate = channelUpdate
	this.HtlcMsat = htlcMsat
	this.OnionSha256 = onionSha256
	this.CltvExpiry = cltvExpiry
	this.Flags = flags
	this.FailureSourceIndex = failureSourceIndex
	this.Height = height
	return &this
}

// NewHTLCAttemptFailureWithDefaults instantiates a new HTLCAttemptFailure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHTLCAttemptFailureWithDefaults() *HTLCAttemptFailure {
	this := HTLCAttemptFailure{}
	return &this
}

// GetCode returns the Code field value
func (o *HTLCAttemptFailure) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *HTLCAttemptFailure) SetCode(v int32) {
	o.Code = v
}

// GetChannelUpdate returns the ChannelUpdate field value
func (o *HTLCAttemptFailure) GetChannelUpdate() ChannelUpdate {
	if o == nil {
		var ret ChannelUpdate
		return ret
	}

	return o.ChannelUpdate
}

// GetChannelUpdateOk returns a tuple with the ChannelUpdate field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetChannelUpdateOk() (*ChannelUpdate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelUpdate, true
}

// SetChannelUpdate sets field value
func (o *HTLCAttemptFailure) SetChannelUpdate(v ChannelUpdate) {
	o.ChannelUpdate = v
}

// GetHtlcMsat returns the HtlcMsat field value
func (o *HTLCAttemptFailure) GetHtlcMsat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HtlcMsat
}

// GetHtlcMsatOk returns a tuple with the HtlcMsat field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetHtlcMsatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtlcMsat, true
}

// SetHtlcMsat sets field value
func (o *HTLCAttemptFailure) SetHtlcMsat(v int32) {
	o.HtlcMsat = v
}

// GetOnionSha256 returns the OnionSha256 field value
func (o *HTLCAttemptFailure) GetOnionSha256() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OnionSha256
}

// GetOnionSha256Ok returns a tuple with the OnionSha256 field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetOnionSha256Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnionSha256, true
}

// SetOnionSha256 sets field value
func (o *HTLCAttemptFailure) SetOnionSha256(v string) {
	o.OnionSha256 = v
}

// GetCltvExpiry returns the CltvExpiry field value
func (o *HTLCAttemptFailure) GetCltvExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CltvExpiry
}

// GetCltvExpiryOk returns a tuple with the CltvExpiry field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetCltvExpiryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CltvExpiry, true
}

// SetCltvExpiry sets field value
func (o *HTLCAttemptFailure) SetCltvExpiry(v int32) {
	o.CltvExpiry = v
}

// GetFlags returns the Flags field value
func (o *HTLCAttemptFailure) GetFlags() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetFlagsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flags, true
}

// SetFlags sets field value
func (o *HTLCAttemptFailure) SetFlags(v int32) {
	o.Flags = v
}

// GetFailureSourceIndex returns the FailureSourceIndex field value
func (o *HTLCAttemptFailure) GetFailureSourceIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailureSourceIndex
}

// GetFailureSourceIndexOk returns a tuple with the FailureSourceIndex field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetFailureSourceIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureSourceIndex, true
}

// SetFailureSourceIndex sets field value
func (o *HTLCAttemptFailure) SetFailureSourceIndex(v int32) {
	o.FailureSourceIndex = v
}

// GetHeight returns the Height field value
func (o *HTLCAttemptFailure) GetHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *HTLCAttemptFailure) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *HTLCAttemptFailure) SetHeight(v int32) {
	o.Height = v
}

func (o HTLCAttemptFailure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["channel_update"] = o.ChannelUpdate
	}
	if true {
		toSerialize["htlc_msat"] = o.HtlcMsat
	}
	if true {
		toSerialize["onion_sha_256"] = o.OnionSha256
	}
	if true {
		toSerialize["cltv_expiry"] = o.CltvExpiry
	}
	if true {
		toSerialize["flags"] = o.Flags
	}
	if true {
		toSerialize["failure_source_index"] = o.FailureSourceIndex
	}
	if true {
		toSerialize["height"] = o.Height
	}
	return json.Marshal(toSerialize)
}

type NullableHTLCAttemptFailure struct {
	value *HTLCAttemptFailure
	isSet bool
}

func (v NullableHTLCAttemptFailure) Get() *HTLCAttemptFailure {
	return v.value
}

func (v *NullableHTLCAttemptFailure) Set(val *HTLCAttemptFailure) {
	v.value = val
	v.isSet = true
}

func (v NullableHTLCAttemptFailure) IsSet() bool {
	return v.isSet
}

func (v *NullableHTLCAttemptFailure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHTLCAttemptFailure(val *HTLCAttemptFailure) *NullableHTLCAttemptFailure {
	return &NullableHTLCAttemptFailure{value: val, isSet: true}
}

func (v NullableHTLCAttemptFailure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHTLCAttemptFailure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


