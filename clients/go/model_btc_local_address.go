/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BtcLocalAddress struct for BtcLocalAddress
type BtcLocalAddress struct {
	// Network address
	Address string `json:"address"`
	// Network port
	Port int32 `json:"port"`
	// Relative score
	Score int32 `json:"score"`
}

// NewBtcLocalAddress instantiates a new BtcLocalAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBtcLocalAddress(address string, port int32, score int32) *BtcLocalAddress {
	this := BtcLocalAddress{}
	this.Address = address
	this.Port = port
	this.Score = score
	return &this
}

// NewBtcLocalAddressWithDefaults instantiates a new BtcLocalAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBtcLocalAddressWithDefaults() *BtcLocalAddress {
	this := BtcLocalAddress{}
	return &this
}

// GetAddress returns the Address field value
func (o *BtcLocalAddress) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *BtcLocalAddress) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *BtcLocalAddress) SetAddress(v string) {
	o.Address = v
}

// GetPort returns the Port field value
func (o *BtcLocalAddress) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *BtcLocalAddress) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *BtcLocalAddress) SetPort(v int32) {
	o.Port = v
}

// GetScore returns the Score field value
func (o *BtcLocalAddress) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *BtcLocalAddress) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *BtcLocalAddress) SetScore(v int32) {
	o.Score = v
}

func (o BtcLocalAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["port"] = o.Port
	}
	if true {
		toSerialize["score"] = o.Score
	}
	return json.Marshal(toSerialize)
}

type NullableBtcLocalAddress struct {
	value *BtcLocalAddress
	isSet bool
}

func (v NullableBtcLocalAddress) Get() *BtcLocalAddress {
	return v.value
}

func (v *NullableBtcLocalAddress) Set(val *BtcLocalAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBtcLocalAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBtcLocalAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBtcLocalAddress(val *BtcLocalAddress) *NullableBtcLocalAddress {
	return &NullableBtcLocalAddress{value: val, isSet: true}
}

func (v NullableBtcLocalAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBtcLocalAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


