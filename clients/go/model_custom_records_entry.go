/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomRecordsEntry struct for CustomRecordsEntry
type CustomRecordsEntry struct {
	Key int32 `json:"key"`
	Value string `json:"value"`
}

// NewCustomRecordsEntry instantiates a new CustomRecordsEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomRecordsEntry(key int32, value string) *CustomRecordsEntry {
	this := CustomRecordsEntry{}
	this.Key = key
	this.Value = value
	return &this
}

// NewCustomRecordsEntryWithDefaults instantiates a new CustomRecordsEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomRecordsEntryWithDefaults() *CustomRecordsEntry {
	this := CustomRecordsEntry{}
	return &this
}

// GetKey returns the Key field value
func (o *CustomRecordsEntry) GetKey() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CustomRecordsEntry) GetKeyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CustomRecordsEntry) SetKey(v int32) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *CustomRecordsEntry) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CustomRecordsEntry) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CustomRecordsEntry) SetValue(v string) {
	o.Value = v
}

func (o CustomRecordsEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableCustomRecordsEntry struct {
	value *CustomRecordsEntry
	isSet bool
}

func (v NullableCustomRecordsEntry) Get() *CustomRecordsEntry {
	return v.value
}

func (v *NullableCustomRecordsEntry) Set(val *CustomRecordsEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRecordsEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRecordsEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRecordsEntry(val *CustomRecordsEntry) *NullableCustomRecordsEntry {
	return &NullableCustomRecordsEntry{value: val, isSet: true}
}

func (v NullableCustomRecordsEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRecordsEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


