/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Channel struct for Channel
type Channel struct {
	ChannelId *string `json:"channel_id,omitempty"`
	Active *bool `json:"active,omitempty"`
	PeerPublickey *string `json:"peer_publickey,omitempty"`
	PeerAlias *string `json:"peer_alias,omitempty"`
	BalanceLocal *int32 `json:"balance_local,omitempty"`
	BalanceRemote *int32 `json:"balance_remote,omitempty"`
	BalanceCapacity *int32 `json:"balance_capacity,omitempty"`
}

// NewChannel instantiates a new Channel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannel() *Channel {
	this := Channel{}
	return &this
}

// NewChannelWithDefaults instantiates a new Channel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelWithDefaults() *Channel {
	this := Channel{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *Channel) GetChannelId() string {
	if o == nil || o.ChannelId == nil {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetChannelIdOk() (*string, bool) {
	if o == nil || o.ChannelId == nil {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *Channel) HasChannelId() bool {
	if o != nil && o.ChannelId != nil {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *Channel) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Channel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Channel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Channel) SetActive(v bool) {
	o.Active = &v
}

// GetPeerPublickey returns the PeerPublickey field value if set, zero value otherwise.
func (o *Channel) GetPeerPublickey() string {
	if o == nil || o.PeerPublickey == nil {
		var ret string
		return ret
	}
	return *o.PeerPublickey
}

// GetPeerPublickeyOk returns a tuple with the PeerPublickey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetPeerPublickeyOk() (*string, bool) {
	if o == nil || o.PeerPublickey == nil {
		return nil, false
	}
	return o.PeerPublickey, true
}

// HasPeerPublickey returns a boolean if a field has been set.
func (o *Channel) HasPeerPublickey() bool {
	if o != nil && o.PeerPublickey != nil {
		return true
	}

	return false
}

// SetPeerPublickey gets a reference to the given string and assigns it to the PeerPublickey field.
func (o *Channel) SetPeerPublickey(v string) {
	o.PeerPublickey = &v
}

// GetPeerAlias returns the PeerAlias field value if set, zero value otherwise.
func (o *Channel) GetPeerAlias() string {
	if o == nil || o.PeerAlias == nil {
		var ret string
		return ret
	}
	return *o.PeerAlias
}

// GetPeerAliasOk returns a tuple with the PeerAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetPeerAliasOk() (*string, bool) {
	if o == nil || o.PeerAlias == nil {
		return nil, false
	}
	return o.PeerAlias, true
}

// HasPeerAlias returns a boolean if a field has been set.
func (o *Channel) HasPeerAlias() bool {
	if o != nil && o.PeerAlias != nil {
		return true
	}

	return false
}

// SetPeerAlias gets a reference to the given string and assigns it to the PeerAlias field.
func (o *Channel) SetPeerAlias(v string) {
	o.PeerAlias = &v
}

// GetBalanceLocal returns the BalanceLocal field value if set, zero value otherwise.
func (o *Channel) GetBalanceLocal() int32 {
	if o == nil || o.BalanceLocal == nil {
		var ret int32
		return ret
	}
	return *o.BalanceLocal
}

// GetBalanceLocalOk returns a tuple with the BalanceLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetBalanceLocalOk() (*int32, bool) {
	if o == nil || o.BalanceLocal == nil {
		return nil, false
	}
	return o.BalanceLocal, true
}

// HasBalanceLocal returns a boolean if a field has been set.
func (o *Channel) HasBalanceLocal() bool {
	if o != nil && o.BalanceLocal != nil {
		return true
	}

	return false
}

// SetBalanceLocal gets a reference to the given int32 and assigns it to the BalanceLocal field.
func (o *Channel) SetBalanceLocal(v int32) {
	o.BalanceLocal = &v
}

// GetBalanceRemote returns the BalanceRemote field value if set, zero value otherwise.
func (o *Channel) GetBalanceRemote() int32 {
	if o == nil || o.BalanceRemote == nil {
		var ret int32
		return ret
	}
	return *o.BalanceRemote
}

// GetBalanceRemoteOk returns a tuple with the BalanceRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetBalanceRemoteOk() (*int32, bool) {
	if o == nil || o.BalanceRemote == nil {
		return nil, false
	}
	return o.BalanceRemote, true
}

// HasBalanceRemote returns a boolean if a field has been set.
func (o *Channel) HasBalanceRemote() bool {
	if o != nil && o.BalanceRemote != nil {
		return true
	}

	return false
}

// SetBalanceRemote gets a reference to the given int32 and assigns it to the BalanceRemote field.
func (o *Channel) SetBalanceRemote(v int32) {
	o.BalanceRemote = &v
}

// GetBalanceCapacity returns the BalanceCapacity field value if set, zero value otherwise.
func (o *Channel) GetBalanceCapacity() int32 {
	if o == nil || o.BalanceCapacity == nil {
		var ret int32
		return ret
	}
	return *o.BalanceCapacity
}

// GetBalanceCapacityOk returns a tuple with the BalanceCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetBalanceCapacityOk() (*int32, bool) {
	if o == nil || o.BalanceCapacity == nil {
		return nil, false
	}
	return o.BalanceCapacity, true
}

// HasBalanceCapacity returns a boolean if a field has been set.
func (o *Channel) HasBalanceCapacity() bool {
	if o != nil && o.BalanceCapacity != nil {
		return true
	}

	return false
}

// SetBalanceCapacity gets a reference to the given int32 and assigns it to the BalanceCapacity field.
func (o *Channel) SetBalanceCapacity(v int32) {
	o.BalanceCapacity = &v
}

func (o Channel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelId != nil {
		toSerialize["channel_id"] = o.ChannelId
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.PeerPublickey != nil {
		toSerialize["peer_publickey"] = o.PeerPublickey
	}
	if o.PeerAlias != nil {
		toSerialize["peer_alias"] = o.PeerAlias
	}
	if o.BalanceLocal != nil {
		toSerialize["balance_local"] = o.BalanceLocal
	}
	if o.BalanceRemote != nil {
		toSerialize["balance_remote"] = o.BalanceRemote
	}
	if o.BalanceCapacity != nil {
		toSerialize["balance_capacity"] = o.BalanceCapacity
	}
	return json.Marshal(toSerialize)
}

type NullableChannel struct {
	value *Channel
	isSet bool
}

func (v NullableChannel) Get() *Channel {
	return v.value
}

func (v *NullableChannel) Set(val *Channel) {
	v.value = val
	v.isSet = true
}

func (v NullableChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannel(val *Channel) *NullableChannel {
	return &NullableChannel{value: val, isSet: true}
}

func (v NullableChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


