/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SystemInfo struct for SystemInfo
type SystemInfo struct {
	// Name of the node (same as Lightning alias)
	Alias *string `json:"alias,omitempty"`
	// The color of the current node in hex code format
	Color string `json:"color"`
	// The platform this API is running on.
	Platform NullableAPIPlatform `json:"platform,omitempty"`
	// The version of this platform
	PlatformVersion *string `json:"platform_version,omitempty"`
	// Version of the API software on this system.
	ApiVersion string `json:"api_version"`
	// WebUI TOR address
	TorWebUi *string `json:"tor_web_ui,omitempty"`
	// API TOR address
	TorApi *string `json:"tor_api,omitempty"`
	// WebUI LAN address
	LanWebUi *string `json:"lan_web_ui,omitempty"`
	// API LAN address
	LanApi *string `json:"lan_api,omitempty"`
	// Address to ssh into on local LAN (e.g. `ssh admin@192.168.1.28`
	SshAddress string `json:"ssh_address"`
	// The current chain this node is connected to (mainnet, testnet or signet)
	Chain string `json:"chain"`
}

// NewSystemInfo instantiates a new SystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInfo(color string, apiVersion string, sshAddress string, chain string) *SystemInfo {
	this := SystemInfo{}
	var alias string = ""
	this.Alias = &alias
	this.Color = color
	var platformVersion string = ""
	this.PlatformVersion = &platformVersion
	this.ApiVersion = apiVersion
	var torWebUi string = ""
	this.TorWebUi = &torWebUi
	var torApi string = ""
	this.TorApi = &torApi
	var lanWebUi string = ""
	this.LanWebUi = &lanWebUi
	var lanApi string = ""
	this.LanApi = &lanApi
	this.SshAddress = sshAddress
	this.Chain = chain
	return &this
}

// NewSystemInfoWithDefaults instantiates a new SystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInfoWithDefaults() *SystemInfo {
	this := SystemInfo{}
	var alias string = ""
	this.Alias = &alias
	var platformVersion string = ""
	this.PlatformVersion = &platformVersion
	var torWebUi string = ""
	this.TorWebUi = &torWebUi
	var torApi string = ""
	this.TorApi = &torApi
	var lanWebUi string = ""
	this.LanWebUi = &lanWebUi
	var lanApi string = ""
	this.LanApi = &lanApi
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *SystemInfo) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *SystemInfo) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *SystemInfo) SetAlias(v string) {
	o.Alias = &v
}

// GetColor returns the Color field value
func (o *SystemInfo) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *SystemInfo) SetColor(v string) {
	o.Color = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemInfo) GetPlatform() APIPlatform {
	if o == nil || o.Platform.Get() == nil {
		var ret APIPlatform
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemInfo) GetPlatformOk() (*APIPlatform, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *SystemInfo) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableAPIPlatform and assigns it to the Platform field.
func (o *SystemInfo) SetPlatform(v APIPlatform) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *SystemInfo) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *SystemInfo) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPlatformVersion returns the PlatformVersion field value if set, zero value otherwise.
func (o *SystemInfo) GetPlatformVersion() string {
	if o == nil || o.PlatformVersion == nil {
		var ret string
		return ret
	}
	return *o.PlatformVersion
}

// GetPlatformVersionOk returns a tuple with the PlatformVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetPlatformVersionOk() (*string, bool) {
	if o == nil || o.PlatformVersion == nil {
		return nil, false
	}
	return o.PlatformVersion, true
}

// HasPlatformVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasPlatformVersion() bool {
	if o != nil && o.PlatformVersion != nil {
		return true
	}

	return false
}

// SetPlatformVersion gets a reference to the given string and assigns it to the PlatformVersion field.
func (o *SystemInfo) SetPlatformVersion(v string) {
	o.PlatformVersion = &v
}

// GetApiVersion returns the ApiVersion field value
func (o *SystemInfo) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *SystemInfo) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetTorWebUi returns the TorWebUi field value if set, zero value otherwise.
func (o *SystemInfo) GetTorWebUi() string {
	if o == nil || o.TorWebUi == nil {
		var ret string
		return ret
	}
	return *o.TorWebUi
}

// GetTorWebUiOk returns a tuple with the TorWebUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetTorWebUiOk() (*string, bool) {
	if o == nil || o.TorWebUi == nil {
		return nil, false
	}
	return o.TorWebUi, true
}

// HasTorWebUi returns a boolean if a field has been set.
func (o *SystemInfo) HasTorWebUi() bool {
	if o != nil && o.TorWebUi != nil {
		return true
	}

	return false
}

// SetTorWebUi gets a reference to the given string and assigns it to the TorWebUi field.
func (o *SystemInfo) SetTorWebUi(v string) {
	o.TorWebUi = &v
}

// GetTorApi returns the TorApi field value if set, zero value otherwise.
func (o *SystemInfo) GetTorApi() string {
	if o == nil || o.TorApi == nil {
		var ret string
		return ret
	}
	return *o.TorApi
}

// GetTorApiOk returns a tuple with the TorApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetTorApiOk() (*string, bool) {
	if o == nil || o.TorApi == nil {
		return nil, false
	}
	return o.TorApi, true
}

// HasTorApi returns a boolean if a field has been set.
func (o *SystemInfo) HasTorApi() bool {
	if o != nil && o.TorApi != nil {
		return true
	}

	return false
}

// SetTorApi gets a reference to the given string and assigns it to the TorApi field.
func (o *SystemInfo) SetTorApi(v string) {
	o.TorApi = &v
}

// GetLanWebUi returns the LanWebUi field value if set, zero value otherwise.
func (o *SystemInfo) GetLanWebUi() string {
	if o == nil || o.LanWebUi == nil {
		var ret string
		return ret
	}
	return *o.LanWebUi
}

// GetLanWebUiOk returns a tuple with the LanWebUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLanWebUiOk() (*string, bool) {
	if o == nil || o.LanWebUi == nil {
		return nil, false
	}
	return o.LanWebUi, true
}

// HasLanWebUi returns a boolean if a field has been set.
func (o *SystemInfo) HasLanWebUi() bool {
	if o != nil && o.LanWebUi != nil {
		return true
	}

	return false
}

// SetLanWebUi gets a reference to the given string and assigns it to the LanWebUi field.
func (o *SystemInfo) SetLanWebUi(v string) {
	o.LanWebUi = &v
}

// GetLanApi returns the LanApi field value if set, zero value otherwise.
func (o *SystemInfo) GetLanApi() string {
	if o == nil || o.LanApi == nil {
		var ret string
		return ret
	}
	return *o.LanApi
}

// GetLanApiOk returns a tuple with the LanApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLanApiOk() (*string, bool) {
	if o == nil || o.LanApi == nil {
		return nil, false
	}
	return o.LanApi, true
}

// HasLanApi returns a boolean if a field has been set.
func (o *SystemInfo) HasLanApi() bool {
	if o != nil && o.LanApi != nil {
		return true
	}

	return false
}

// SetLanApi gets a reference to the given string and assigns it to the LanApi field.
func (o *SystemInfo) SetLanApi(v string) {
	o.LanApi = &v
}

// GetSshAddress returns the SshAddress field value
func (o *SystemInfo) GetSshAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshAddress
}

// GetSshAddressOk returns a tuple with the SshAddress field value
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSshAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshAddress, true
}

// SetSshAddress sets field value
func (o *SystemInfo) SetSshAddress(v string) {
	o.SshAddress = v
}

// GetChain returns the Chain field value
func (o *SystemInfo) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *SystemInfo) SetChain(v string) {
	o.Chain = v
}

func (o SystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if true {
		toSerialize["color"] = o.Color
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if o.PlatformVersion != nil {
		toSerialize["platform_version"] = o.PlatformVersion
	}
	if true {
		toSerialize["api_version"] = o.ApiVersion
	}
	if o.TorWebUi != nil {
		toSerialize["tor_web_ui"] = o.TorWebUi
	}
	if o.TorApi != nil {
		toSerialize["tor_api"] = o.TorApi
	}
	if o.LanWebUi != nil {
		toSerialize["lan_web_ui"] = o.LanWebUi
	}
	if o.LanApi != nil {
		toSerialize["lan_api"] = o.LanApi
	}
	if true {
		toSerialize["ssh_address"] = o.SshAddress
	}
	if true {
		toSerialize["chain"] = o.Chain
	}
	return json.Marshal(toSerialize)
}

type NullableSystemInfo struct {
	value *SystemInfo
	isSet bool
}

func (v NullableSystemInfo) Get() *SystemInfo {
	return v.value
}

func (v *NullableSystemInfo) Set(val *SystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInfo(val *SystemInfo) *NullableSystemInfo {
	return &NullableSystemInfo{value: val, isSet: true}
}

func (v NullableSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


