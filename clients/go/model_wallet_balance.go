/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WalletBalance struct for WalletBalance
type WalletBalance struct {
	// Confirmed onchain balance (more than three confirmations) in sat
	OnchainConfirmedBalance int32 `json:"onchain_confirmed_balance"`
	// Total combined onchain balance in sat
	OnchainTotalBalance int32 `json:"onchain_total_balance"`
	// Unconfirmed onchain balance (less than three confirmations) in sat
	OnchainUnconfirmedBalance int32 `json:"onchain_unconfirmed_balance"`
	// Sum of channels local balances in msat
	ChannelLocalBalance int32 `json:"channel_local_balance"`
	// Sum of channels remote balances in msat.
	ChannelRemoteBalance int32 `json:"channel_remote_balance"`
	// Sum of channels local unsettled balances in msat.
	ChannelUnsettledLocalBalance int32 `json:"channel_unsettled_local_balance"`
	// Sum of channels remote unsettled balances in msat.
	ChannelUnsettledRemoteBalance int32 `json:"channel_unsettled_remote_balance"`
	// Sum of channels pending local balances in msat.
	ChannelPendingOpenLocalBalance int32 `json:"channel_pending_open_local_balance"`
	// Sum of channels pending remote balances in msat.
	ChannelPendingOpenRemoteBalance int32 `json:"channel_pending_open_remote_balance"`
}

// NewWalletBalance instantiates a new WalletBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletBalance(onchainConfirmedBalance int32, onchainTotalBalance int32, onchainUnconfirmedBalance int32, channelLocalBalance int32, channelRemoteBalance int32, channelUnsettledLocalBalance int32, channelUnsettledRemoteBalance int32, channelPendingOpenLocalBalance int32, channelPendingOpenRemoteBalance int32) *WalletBalance {
	this := WalletBalance{}
	this.OnchainConfirmedBalance = onchainConfirmedBalance
	this.OnchainTotalBalance = onchainTotalBalance
	this.OnchainUnconfirmedBalance = onchainUnconfirmedBalance
	this.ChannelLocalBalance = channelLocalBalance
	this.ChannelRemoteBalance = channelRemoteBalance
	this.ChannelUnsettledLocalBalance = channelUnsettledLocalBalance
	this.ChannelUnsettledRemoteBalance = channelUnsettledRemoteBalance
	this.ChannelPendingOpenLocalBalance = channelPendingOpenLocalBalance
	this.ChannelPendingOpenRemoteBalance = channelPendingOpenRemoteBalance
	return &this
}

// NewWalletBalanceWithDefaults instantiates a new WalletBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletBalanceWithDefaults() *WalletBalance {
	this := WalletBalance{}
	return &this
}

// GetOnchainConfirmedBalance returns the OnchainConfirmedBalance field value
func (o *WalletBalance) GetOnchainConfirmedBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OnchainConfirmedBalance
}

// GetOnchainConfirmedBalanceOk returns a tuple with the OnchainConfirmedBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetOnchainConfirmedBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnchainConfirmedBalance, true
}

// SetOnchainConfirmedBalance sets field value
func (o *WalletBalance) SetOnchainConfirmedBalance(v int32) {
	o.OnchainConfirmedBalance = v
}

// GetOnchainTotalBalance returns the OnchainTotalBalance field value
func (o *WalletBalance) GetOnchainTotalBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OnchainTotalBalance
}

// GetOnchainTotalBalanceOk returns a tuple with the OnchainTotalBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetOnchainTotalBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnchainTotalBalance, true
}

// SetOnchainTotalBalance sets field value
func (o *WalletBalance) SetOnchainTotalBalance(v int32) {
	o.OnchainTotalBalance = v
}

// GetOnchainUnconfirmedBalance returns the OnchainUnconfirmedBalance field value
func (o *WalletBalance) GetOnchainUnconfirmedBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OnchainUnconfirmedBalance
}

// GetOnchainUnconfirmedBalanceOk returns a tuple with the OnchainUnconfirmedBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetOnchainUnconfirmedBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnchainUnconfirmedBalance, true
}

// SetOnchainUnconfirmedBalance sets field value
func (o *WalletBalance) SetOnchainUnconfirmedBalance(v int32) {
	o.OnchainUnconfirmedBalance = v
}

// GetChannelLocalBalance returns the ChannelLocalBalance field value
func (o *WalletBalance) GetChannelLocalBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelLocalBalance
}

// GetChannelLocalBalanceOk returns a tuple with the ChannelLocalBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelLocalBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelLocalBalance, true
}

// SetChannelLocalBalance sets field value
func (o *WalletBalance) SetChannelLocalBalance(v int32) {
	o.ChannelLocalBalance = v
}

// GetChannelRemoteBalance returns the ChannelRemoteBalance field value
func (o *WalletBalance) GetChannelRemoteBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelRemoteBalance
}

// GetChannelRemoteBalanceOk returns a tuple with the ChannelRemoteBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelRemoteBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelRemoteBalance, true
}

// SetChannelRemoteBalance sets field value
func (o *WalletBalance) SetChannelRemoteBalance(v int32) {
	o.ChannelRemoteBalance = v
}

// GetChannelUnsettledLocalBalance returns the ChannelUnsettledLocalBalance field value
func (o *WalletBalance) GetChannelUnsettledLocalBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelUnsettledLocalBalance
}

// GetChannelUnsettledLocalBalanceOk returns a tuple with the ChannelUnsettledLocalBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelUnsettledLocalBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelUnsettledLocalBalance, true
}

// SetChannelUnsettledLocalBalance sets field value
func (o *WalletBalance) SetChannelUnsettledLocalBalance(v int32) {
	o.ChannelUnsettledLocalBalance = v
}

// GetChannelUnsettledRemoteBalance returns the ChannelUnsettledRemoteBalance field value
func (o *WalletBalance) GetChannelUnsettledRemoteBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelUnsettledRemoteBalance
}

// GetChannelUnsettledRemoteBalanceOk returns a tuple with the ChannelUnsettledRemoteBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelUnsettledRemoteBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelUnsettledRemoteBalance, true
}

// SetChannelUnsettledRemoteBalance sets field value
func (o *WalletBalance) SetChannelUnsettledRemoteBalance(v int32) {
	o.ChannelUnsettledRemoteBalance = v
}

// GetChannelPendingOpenLocalBalance returns the ChannelPendingOpenLocalBalance field value
func (o *WalletBalance) GetChannelPendingOpenLocalBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelPendingOpenLocalBalance
}

// GetChannelPendingOpenLocalBalanceOk returns a tuple with the ChannelPendingOpenLocalBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelPendingOpenLocalBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelPendingOpenLocalBalance, true
}

// SetChannelPendingOpenLocalBalance sets field value
func (o *WalletBalance) SetChannelPendingOpenLocalBalance(v int32) {
	o.ChannelPendingOpenLocalBalance = v
}

// GetChannelPendingOpenRemoteBalance returns the ChannelPendingOpenRemoteBalance field value
func (o *WalletBalance) GetChannelPendingOpenRemoteBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelPendingOpenRemoteBalance
}

// GetChannelPendingOpenRemoteBalanceOk returns a tuple with the ChannelPendingOpenRemoteBalance field value
// and a boolean to check if the value has been set.
func (o *WalletBalance) GetChannelPendingOpenRemoteBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelPendingOpenRemoteBalance, true
}

// SetChannelPendingOpenRemoteBalance sets field value
func (o *WalletBalance) SetChannelPendingOpenRemoteBalance(v int32) {
	o.ChannelPendingOpenRemoteBalance = v
}

func (o WalletBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["onchain_confirmed_balance"] = o.OnchainConfirmedBalance
	}
	if true {
		toSerialize["onchain_total_balance"] = o.OnchainTotalBalance
	}
	if true {
		toSerialize["onchain_unconfirmed_balance"] = o.OnchainUnconfirmedBalance
	}
	if true {
		toSerialize["channel_local_balance"] = o.ChannelLocalBalance
	}
	if true {
		toSerialize["channel_remote_balance"] = o.ChannelRemoteBalance
	}
	if true {
		toSerialize["channel_unsettled_local_balance"] = o.ChannelUnsettledLocalBalance
	}
	if true {
		toSerialize["channel_unsettled_remote_balance"] = o.ChannelUnsettledRemoteBalance
	}
	if true {
		toSerialize["channel_pending_open_local_balance"] = o.ChannelPendingOpenLocalBalance
	}
	if true {
		toSerialize["channel_pending_open_remote_balance"] = o.ChannelPendingOpenRemoteBalance
	}
	return json.Marshal(toSerialize)
}

type NullableWalletBalance struct {
	value *WalletBalance
	isSet bool
}

func (v NullableWalletBalance) Get() *WalletBalance {
	return v.value
}

func (v *NullableWalletBalance) Set(val *WalletBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletBalance(val *WalletBalance) *NullableWalletBalance {
	return &NullableWalletBalance{value: val, isSet: true}
}

func (v NullableWalletBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


