/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FeeRevenue struct for FeeRevenue
type FeeRevenue struct {
	// Fee revenue earned in the last 24 hours
	Day int32 `json:"day"`
	// Fee revenue earned in the last 7days
	Week int32 `json:"week"`
	// Fee revenue earned in the last month
	Month int32 `json:"month"`
	// Fee revenue earned in the last year. Might be null if not implemented by backend.
	Year *int32 `json:"year,omitempty"`
	// Fee revenue earned in the last year. Might be null if not implemented by backend
	Total *int32 `json:"total,omitempty"`
}

// NewFeeRevenue instantiates a new FeeRevenue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeRevenue(day int32, week int32, month int32) *FeeRevenue {
	this := FeeRevenue{}
	this.Day = day
	this.Week = week
	this.Month = month
	return &this
}

// NewFeeRevenueWithDefaults instantiates a new FeeRevenue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeRevenueWithDefaults() *FeeRevenue {
	this := FeeRevenue{}
	return &this
}

// GetDay returns the Day field value
func (o *FeeRevenue) GetDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *FeeRevenue) GetDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *FeeRevenue) SetDay(v int32) {
	o.Day = v
}

// GetWeek returns the Week field value
func (o *FeeRevenue) GetWeek() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Week
}

// GetWeekOk returns a tuple with the Week field value
// and a boolean to check if the value has been set.
func (o *FeeRevenue) GetWeekOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Week, true
}

// SetWeek sets field value
func (o *FeeRevenue) SetWeek(v int32) {
	o.Week = v
}

// GetMonth returns the Month field value
func (o *FeeRevenue) GetMonth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Month
}

// GetMonthOk returns a tuple with the Month field value
// and a boolean to check if the value has been set.
func (o *FeeRevenue) GetMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Month, true
}

// SetMonth sets field value
func (o *FeeRevenue) SetMonth(v int32) {
	o.Month = v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *FeeRevenue) GetYear() int32 {
	if o == nil || o.Year == nil {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeRevenue) GetYearOk() (*int32, bool) {
	if o == nil || o.Year == nil {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *FeeRevenue) HasYear() bool {
	if o != nil && o.Year != nil {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *FeeRevenue) SetYear(v int32) {
	o.Year = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *FeeRevenue) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeRevenue) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *FeeRevenue) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *FeeRevenue) SetTotal(v int32) {
	o.Total = &v
}

func (o FeeRevenue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["day"] = o.Day
	}
	if true {
		toSerialize["week"] = o.Week
	}
	if true {
		toSerialize["month"] = o.Month
	}
	if o.Year != nil {
		toSerialize["year"] = o.Year
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableFeeRevenue struct {
	value *FeeRevenue
	isSet bool
}

func (v NullableFeeRevenue) Get() *FeeRevenue {
	return v.value
}

func (v *NullableFeeRevenue) Set(val *FeeRevenue) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeRevenue) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeRevenue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeRevenue(val *FeeRevenue) *NullableFeeRevenue {
	return &NullableFeeRevenue{value: val, isSet: true}
}

func (v NullableFeeRevenue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeRevenue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


