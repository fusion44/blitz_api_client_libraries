/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LightningInfoLite struct for LightningInfoLite
type LightningInfoLite struct {
	// Lightning software implementation (LND, c-lightning)
	Implementation string `json:"implementation"`
	// Version of the implementation
	Version string `json:"version"`
	// The identity pubkey of the current node
	IdentityPubkey string `json:"identity_pubkey"`
	// Number of pending channels
	NumPendingChannels int32 `json:"num_pending_channels"`
	// Number of active channels
	NumActiveChannels int32 `json:"num_active_channels"`
	// Number of inactive channels
	NumInactiveChannels int32 `json:"num_inactive_channels"`
	// Number of peers
	NumPeers int32 `json:"num_peers"`
	// The node's current view of the height of the best block
	BlockHeight int32 `json:"block_height"`
	// Whether the wallet's view is synced to the main chain
	SyncedToChain *bool `json:"synced_to_chain,omitempty"`
	// Whether we consider ourselves synced with the public channel graph.
	SyncedToGraph *bool `json:"synced_to_graph,omitempty"`
}

// NewLightningInfoLite instantiates a new LightningInfoLite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLightningInfoLite(implementation string, version string, identityPubkey string, numPendingChannels int32, numActiveChannels int32, numInactiveChannels int32, numPeers int32, blockHeight int32) *LightningInfoLite {
	this := LightningInfoLite{}
	this.Implementation = implementation
	this.Version = version
	this.IdentityPubkey = identityPubkey
	this.NumPendingChannels = numPendingChannels
	this.NumActiveChannels = numActiveChannels
	this.NumInactiveChannels = numInactiveChannels
	this.NumPeers = numPeers
	this.BlockHeight = blockHeight
	return &this
}

// NewLightningInfoLiteWithDefaults instantiates a new LightningInfoLite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLightningInfoLiteWithDefaults() *LightningInfoLite {
	this := LightningInfoLite{}
	return &this
}

// GetImplementation returns the Implementation field value
func (o *LightningInfoLite) GetImplementation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Implementation
}

// GetImplementationOk returns a tuple with the Implementation field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetImplementationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Implementation, true
}

// SetImplementation sets field value
func (o *LightningInfoLite) SetImplementation(v string) {
	o.Implementation = v
}

// GetVersion returns the Version field value
func (o *LightningInfoLite) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *LightningInfoLite) SetVersion(v string) {
	o.Version = v
}

// GetIdentityPubkey returns the IdentityPubkey field value
func (o *LightningInfoLite) GetIdentityPubkey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityPubkey
}

// GetIdentityPubkeyOk returns a tuple with the IdentityPubkey field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetIdentityPubkeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityPubkey, true
}

// SetIdentityPubkey sets field value
func (o *LightningInfoLite) SetIdentityPubkey(v string) {
	o.IdentityPubkey = v
}

// GetNumPendingChannels returns the NumPendingChannels field value
func (o *LightningInfoLite) GetNumPendingChannels() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumPendingChannels
}

// GetNumPendingChannelsOk returns a tuple with the NumPendingChannels field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetNumPendingChannelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPendingChannels, true
}

// SetNumPendingChannels sets field value
func (o *LightningInfoLite) SetNumPendingChannels(v int32) {
	o.NumPendingChannels = v
}

// GetNumActiveChannels returns the NumActiveChannels field value
func (o *LightningInfoLite) GetNumActiveChannels() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumActiveChannels
}

// GetNumActiveChannelsOk returns a tuple with the NumActiveChannels field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetNumActiveChannelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumActiveChannels, true
}

// SetNumActiveChannels sets field value
func (o *LightningInfoLite) SetNumActiveChannels(v int32) {
	o.NumActiveChannels = v
}

// GetNumInactiveChannels returns the NumInactiveChannels field value
func (o *LightningInfoLite) GetNumInactiveChannels() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumInactiveChannels
}

// GetNumInactiveChannelsOk returns a tuple with the NumInactiveChannels field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetNumInactiveChannelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumInactiveChannels, true
}

// SetNumInactiveChannels sets field value
func (o *LightningInfoLite) SetNumInactiveChannels(v int32) {
	o.NumInactiveChannels = v
}

// GetNumPeers returns the NumPeers field value
func (o *LightningInfoLite) GetNumPeers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumPeers
}

// GetNumPeersOk returns a tuple with the NumPeers field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetNumPeersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumPeers, true
}

// SetNumPeers sets field value
func (o *LightningInfoLite) SetNumPeers(v int32) {
	o.NumPeers = v
}

// GetBlockHeight returns the BlockHeight field value
func (o *LightningInfoLite) GetBlockHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BlockHeight
}

// GetBlockHeightOk returns a tuple with the BlockHeight field value
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetBlockHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHeight, true
}

// SetBlockHeight sets field value
func (o *LightningInfoLite) SetBlockHeight(v int32) {
	o.BlockHeight = v
}

// GetSyncedToChain returns the SyncedToChain field value if set, zero value otherwise.
func (o *LightningInfoLite) GetSyncedToChain() bool {
	if o == nil || o.SyncedToChain == nil {
		var ret bool
		return ret
	}
	return *o.SyncedToChain
}

// GetSyncedToChainOk returns a tuple with the SyncedToChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetSyncedToChainOk() (*bool, bool) {
	if o == nil || o.SyncedToChain == nil {
		return nil, false
	}
	return o.SyncedToChain, true
}

// HasSyncedToChain returns a boolean if a field has been set.
func (o *LightningInfoLite) HasSyncedToChain() bool {
	if o != nil && o.SyncedToChain != nil {
		return true
	}

	return false
}

// SetSyncedToChain gets a reference to the given bool and assigns it to the SyncedToChain field.
func (o *LightningInfoLite) SetSyncedToChain(v bool) {
	o.SyncedToChain = &v
}

// GetSyncedToGraph returns the SyncedToGraph field value if set, zero value otherwise.
func (o *LightningInfoLite) GetSyncedToGraph() bool {
	if o == nil || o.SyncedToGraph == nil {
		var ret bool
		return ret
	}
	return *o.SyncedToGraph
}

// GetSyncedToGraphOk returns a tuple with the SyncedToGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LightningInfoLite) GetSyncedToGraphOk() (*bool, bool) {
	if o == nil || o.SyncedToGraph == nil {
		return nil, false
	}
	return o.SyncedToGraph, true
}

// HasSyncedToGraph returns a boolean if a field has been set.
func (o *LightningInfoLite) HasSyncedToGraph() bool {
	if o != nil && o.SyncedToGraph != nil {
		return true
	}

	return false
}

// SetSyncedToGraph gets a reference to the given bool and assigns it to the SyncedToGraph field.
func (o *LightningInfoLite) SetSyncedToGraph(v bool) {
	o.SyncedToGraph = &v
}

func (o LightningInfoLite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["implementation"] = o.Implementation
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["identity_pubkey"] = o.IdentityPubkey
	}
	if true {
		toSerialize["num_pending_channels"] = o.NumPendingChannels
	}
	if true {
		toSerialize["num_active_channels"] = o.NumActiveChannels
	}
	if true {
		toSerialize["num_inactive_channels"] = o.NumInactiveChannels
	}
	if true {
		toSerialize["num_peers"] = o.NumPeers
	}
	if true {
		toSerialize["block_height"] = o.BlockHeight
	}
	if o.SyncedToChain != nil {
		toSerialize["synced_to_chain"] = o.SyncedToChain
	}
	if o.SyncedToGraph != nil {
		toSerialize["synced_to_graph"] = o.SyncedToGraph
	}
	return json.Marshal(toSerialize)
}

type NullableLightningInfoLite struct {
	value *LightningInfoLite
	isSet bool
}

func (v NullableLightningInfoLite) Get() *LightningInfoLite {
	return v.value
}

func (v *NullableLightningInfoLite) Set(val *LightningInfoLite) {
	v.value = val
	v.isSet = true
}

func (v NullableLightningInfoLite) IsSet() bool {
	return v.isSet
}

func (v *NullableLightningInfoLite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLightningInfoLite(val *LightningInfoLite) *NullableLightningInfoLite {
	return &NullableLightningInfoLite{value: val, isSet: true}
}

func (v NullableLightningInfoLite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLightningInfoLite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


