/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SendCoinsResponse struct for SendCoinsResponse
type SendCoinsResponse struct {
	// The transaction ID for this onchain payment
	Txid string `json:"txid"`
	// The base58 or bech32 encoded bitcoin address where the onchain funds where sent to
	Address string `json:"address"`
	// The number of bitcoin denominated in satoshis which where sent
	Amount int32 `json:"amount"`
	// The label used for the transaction. Ignored by CLN backend.
	Label *string `json:"label,omitempty"`
}

// NewSendCoinsResponse instantiates a new SendCoinsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendCoinsResponse(txid string, address string, amount int32) *SendCoinsResponse {
	this := SendCoinsResponse{}
	this.Txid = txid
	this.Address = address
	this.Amount = amount
	var label string = ""
	this.Label = &label
	return &this
}

// NewSendCoinsResponseWithDefaults instantiates a new SendCoinsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendCoinsResponseWithDefaults() *SendCoinsResponse {
	this := SendCoinsResponse{}
	var label string = ""
	this.Label = &label
	return &this
}

// GetTxid returns the Txid field value
func (o *SendCoinsResponse) GetTxid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Txid
}

// GetTxidOk returns a tuple with the Txid field value
// and a boolean to check if the value has been set.
func (o *SendCoinsResponse) GetTxidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Txid, true
}

// SetTxid sets field value
func (o *SendCoinsResponse) SetTxid(v string) {
	o.Txid = v
}

// GetAddress returns the Address field value
func (o *SendCoinsResponse) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *SendCoinsResponse) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *SendCoinsResponse) SetAddress(v string) {
	o.Address = v
}

// GetAmount returns the Amount field value
func (o *SendCoinsResponse) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SendCoinsResponse) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SendCoinsResponse) SetAmount(v int32) {
	o.Amount = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *SendCoinsResponse) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendCoinsResponse) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *SendCoinsResponse) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *SendCoinsResponse) SetLabel(v string) {
	o.Label = &v
}

func (o SendCoinsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["txid"] = o.Txid
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullableSendCoinsResponse struct {
	value *SendCoinsResponse
	isSet bool
}

func (v NullableSendCoinsResponse) Get() *SendCoinsResponse {
	return v.value
}

func (v *NullableSendCoinsResponse) Set(val *SendCoinsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSendCoinsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSendCoinsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendCoinsResponse(val *SendCoinsResponse) *NullableSendCoinsResponse {
	return &NullableSendCoinsResponse{value: val, isSet: true}
}

func (v NullableSendCoinsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendCoinsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


