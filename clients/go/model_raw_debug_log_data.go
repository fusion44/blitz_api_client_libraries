/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RawDebugLogData struct for RawDebugLogData
type RawDebugLogData struct {
	// The raw debug log text
	RawData string `json:"raw_data"`
	// Link to the Raspiblitz issue tracker
	GithubIssuesUrl *string `json:"github_issues_url,omitempty"`
}

// NewRawDebugLogData instantiates a new RawDebugLogData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawDebugLogData(rawData string) *RawDebugLogData {
	this := RawDebugLogData{}
	this.RawData = rawData
	var githubIssuesUrl string = "https://www.github.com/rootzoll/raspiblitz/issues"
	this.GithubIssuesUrl = &githubIssuesUrl
	return &this
}

// NewRawDebugLogDataWithDefaults instantiates a new RawDebugLogData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawDebugLogDataWithDefaults() *RawDebugLogData {
	this := RawDebugLogData{}
	var githubIssuesUrl string = "https://www.github.com/rootzoll/raspiblitz/issues"
	this.GithubIssuesUrl = &githubIssuesUrl
	return &this
}

// GetRawData returns the RawData field value
func (o *RawDebugLogData) GetRawData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value
// and a boolean to check if the value has been set.
func (o *RawDebugLogData) GetRawDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawData, true
}

// SetRawData sets field value
func (o *RawDebugLogData) SetRawData(v string) {
	o.RawData = v
}

// GetGithubIssuesUrl returns the GithubIssuesUrl field value if set, zero value otherwise.
func (o *RawDebugLogData) GetGithubIssuesUrl() string {
	if o == nil || o.GithubIssuesUrl == nil {
		var ret string
		return ret
	}
	return *o.GithubIssuesUrl
}

// GetGithubIssuesUrlOk returns a tuple with the GithubIssuesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawDebugLogData) GetGithubIssuesUrlOk() (*string, bool) {
	if o == nil || o.GithubIssuesUrl == nil {
		return nil, false
	}
	return o.GithubIssuesUrl, true
}

// HasGithubIssuesUrl returns a boolean if a field has been set.
func (o *RawDebugLogData) HasGithubIssuesUrl() bool {
	if o != nil && o.GithubIssuesUrl != nil {
		return true
	}

	return false
}

// SetGithubIssuesUrl gets a reference to the given string and assigns it to the GithubIssuesUrl field.
func (o *RawDebugLogData) SetGithubIssuesUrl(v string) {
	o.GithubIssuesUrl = &v
}

func (o RawDebugLogData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["raw_data"] = o.RawData
	}
	if o.GithubIssuesUrl != nil {
		toSerialize["github_issues_url"] = o.GithubIssuesUrl
	}
	return json.Marshal(toSerialize)
}

type NullableRawDebugLogData struct {
	value *RawDebugLogData
	isSet bool
}

func (v NullableRawDebugLogData) Get() *RawDebugLogData {
	return v.value
}

func (v *NullableRawDebugLogData) Set(val *RawDebugLogData) {
	v.value = val
	v.isSet = true
}

func (v NullableRawDebugLogData) IsSet() bool {
	return v.isSet
}

func (v *NullableRawDebugLogData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawDebugLogData(val *RawDebugLogData) *NullableRawDebugLogData {
	return &NullableRawDebugLogData{value: val, isSet: true}
}

func (v NullableRawDebugLogData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawDebugLogData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


