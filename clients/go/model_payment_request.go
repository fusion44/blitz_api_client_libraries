/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PaymentRequest struct for PaymentRequest
type PaymentRequest struct {
	Destination string `json:"destination"`
	PaymentHash string `json:"payment_hash"`
	// Deprecated. User num_msat instead
	NumSatoshis *int32 `json:"num_satoshis,omitempty"`
	Timestamp int32 `json:"timestamp"`
	Expiry int32 `json:"expiry"`
	Description string `json:"description"`
	DescriptionHash *string `json:"description_hash,omitempty"`
	FallbackAddr *string `json:"fallback_addr,omitempty"`
	CltvExpiry int32 `json:"cltv_expiry"`
	// A list of [HopHint] for the RouteHint
	RouteHints []RouteHint `json:"route_hints,omitempty"`
	// The payment address in hex format
	PaymentAddr *string `json:"payment_addr,omitempty"`
	NumMsat *int32 `json:"num_msat,omitempty"`
	Features []FeaturesEntry `json:"features,omitempty"`
	// Optional requested currency of the payment. 
	Currency *string `json:"currency,omitempty"`
}

// NewPaymentRequest instantiates a new PaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentRequest(destination string, paymentHash string, timestamp int32, expiry int32, description string, cltvExpiry int32) *PaymentRequest {
	this := PaymentRequest{}
	this.Destination = destination
	this.PaymentHash = paymentHash
	this.Timestamp = timestamp
	this.Expiry = expiry
	this.Description = description
	this.CltvExpiry = cltvExpiry
	var paymentAddr string = ""
	this.PaymentAddr = &paymentAddr
	var currency string = ""
	this.Currency = &currency
	return &this
}

// NewPaymentRequestWithDefaults instantiates a new PaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentRequestWithDefaults() *PaymentRequest {
	this := PaymentRequest{}
	var paymentAddr string = ""
	this.PaymentAddr = &paymentAddr
	var currency string = ""
	this.Currency = &currency
	return &this
}

// GetDestination returns the Destination field value
func (o *PaymentRequest) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *PaymentRequest) SetDestination(v string) {
	o.Destination = v
}

// GetPaymentHash returns the PaymentHash field value
func (o *PaymentRequest) GetPaymentHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentHash
}

// GetPaymentHashOk returns a tuple with the PaymentHash field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetPaymentHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentHash, true
}

// SetPaymentHash sets field value
func (o *PaymentRequest) SetPaymentHash(v string) {
	o.PaymentHash = v
}

// GetNumSatoshis returns the NumSatoshis field value if set, zero value otherwise.
func (o *PaymentRequest) GetNumSatoshis() int32 {
	if o == nil || o.NumSatoshis == nil {
		var ret int32
		return ret
	}
	return *o.NumSatoshis
}

// GetNumSatoshisOk returns a tuple with the NumSatoshis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetNumSatoshisOk() (*int32, bool) {
	if o == nil || o.NumSatoshis == nil {
		return nil, false
	}
	return o.NumSatoshis, true
}

// HasNumSatoshis returns a boolean if a field has been set.
func (o *PaymentRequest) HasNumSatoshis() bool {
	if o != nil && o.NumSatoshis != nil {
		return true
	}

	return false
}

// SetNumSatoshis gets a reference to the given int32 and assigns it to the NumSatoshis field.
func (o *PaymentRequest) SetNumSatoshis(v int32) {
	o.NumSatoshis = &v
}

// GetTimestamp returns the Timestamp field value
func (o *PaymentRequest) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *PaymentRequest) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetExpiry returns the Expiry field value
func (o *PaymentRequest) GetExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetExpiryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiry, true
}

// SetExpiry sets field value
func (o *PaymentRequest) SetExpiry(v int32) {
	o.Expiry = v
}

// GetDescription returns the Description field value
func (o *PaymentRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PaymentRequest) SetDescription(v string) {
	o.Description = v
}

// GetDescriptionHash returns the DescriptionHash field value if set, zero value otherwise.
func (o *PaymentRequest) GetDescriptionHash() string {
	if o == nil || o.DescriptionHash == nil {
		var ret string
		return ret
	}
	return *o.DescriptionHash
}

// GetDescriptionHashOk returns a tuple with the DescriptionHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetDescriptionHashOk() (*string, bool) {
	if o == nil || o.DescriptionHash == nil {
		return nil, false
	}
	return o.DescriptionHash, true
}

// HasDescriptionHash returns a boolean if a field has been set.
func (o *PaymentRequest) HasDescriptionHash() bool {
	if o != nil && o.DescriptionHash != nil {
		return true
	}

	return false
}

// SetDescriptionHash gets a reference to the given string and assigns it to the DescriptionHash field.
func (o *PaymentRequest) SetDescriptionHash(v string) {
	o.DescriptionHash = &v
}

// GetFallbackAddr returns the FallbackAddr field value if set, zero value otherwise.
func (o *PaymentRequest) GetFallbackAddr() string {
	if o == nil || o.FallbackAddr == nil {
		var ret string
		return ret
	}
	return *o.FallbackAddr
}

// GetFallbackAddrOk returns a tuple with the FallbackAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetFallbackAddrOk() (*string, bool) {
	if o == nil || o.FallbackAddr == nil {
		return nil, false
	}
	return o.FallbackAddr, true
}

// HasFallbackAddr returns a boolean if a field has been set.
func (o *PaymentRequest) HasFallbackAddr() bool {
	if o != nil && o.FallbackAddr != nil {
		return true
	}

	return false
}

// SetFallbackAddr gets a reference to the given string and assigns it to the FallbackAddr field.
func (o *PaymentRequest) SetFallbackAddr(v string) {
	o.FallbackAddr = &v
}

// GetCltvExpiry returns the CltvExpiry field value
func (o *PaymentRequest) GetCltvExpiry() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CltvExpiry
}

// GetCltvExpiryOk returns a tuple with the CltvExpiry field value
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetCltvExpiryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CltvExpiry, true
}

// SetCltvExpiry sets field value
func (o *PaymentRequest) SetCltvExpiry(v int32) {
	o.CltvExpiry = v
}

// GetRouteHints returns the RouteHints field value if set, zero value otherwise.
func (o *PaymentRequest) GetRouteHints() []RouteHint {
	if o == nil || o.RouteHints == nil {
		var ret []RouteHint
		return ret
	}
	return o.RouteHints
}

// GetRouteHintsOk returns a tuple with the RouteHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetRouteHintsOk() ([]RouteHint, bool) {
	if o == nil || o.RouteHints == nil {
		return nil, false
	}
	return o.RouteHints, true
}

// HasRouteHints returns a boolean if a field has been set.
func (o *PaymentRequest) HasRouteHints() bool {
	if o != nil && o.RouteHints != nil {
		return true
	}

	return false
}

// SetRouteHints gets a reference to the given []RouteHint and assigns it to the RouteHints field.
func (o *PaymentRequest) SetRouteHints(v []RouteHint) {
	o.RouteHints = v
}

// GetPaymentAddr returns the PaymentAddr field value if set, zero value otherwise.
func (o *PaymentRequest) GetPaymentAddr() string {
	if o == nil || o.PaymentAddr == nil {
		var ret string
		return ret
	}
	return *o.PaymentAddr
}

// GetPaymentAddrOk returns a tuple with the PaymentAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetPaymentAddrOk() (*string, bool) {
	if o == nil || o.PaymentAddr == nil {
		return nil, false
	}
	return o.PaymentAddr, true
}

// HasPaymentAddr returns a boolean if a field has been set.
func (o *PaymentRequest) HasPaymentAddr() bool {
	if o != nil && o.PaymentAddr != nil {
		return true
	}

	return false
}

// SetPaymentAddr gets a reference to the given string and assigns it to the PaymentAddr field.
func (o *PaymentRequest) SetPaymentAddr(v string) {
	o.PaymentAddr = &v
}

// GetNumMsat returns the NumMsat field value if set, zero value otherwise.
func (o *PaymentRequest) GetNumMsat() int32 {
	if o == nil || o.NumMsat == nil {
		var ret int32
		return ret
	}
	return *o.NumMsat
}

// GetNumMsatOk returns a tuple with the NumMsat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetNumMsatOk() (*int32, bool) {
	if o == nil || o.NumMsat == nil {
		return nil, false
	}
	return o.NumMsat, true
}

// HasNumMsat returns a boolean if a field has been set.
func (o *PaymentRequest) HasNumMsat() bool {
	if o != nil && o.NumMsat != nil {
		return true
	}

	return false
}

// SetNumMsat gets a reference to the given int32 and assigns it to the NumMsat field.
func (o *PaymentRequest) SetNumMsat(v int32) {
	o.NumMsat = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *PaymentRequest) GetFeatures() []FeaturesEntry {
	if o == nil || o.Features == nil {
		var ret []FeaturesEntry
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetFeaturesOk() ([]FeaturesEntry, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *PaymentRequest) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []FeaturesEntry and assigns it to the Features field.
func (o *PaymentRequest) SetFeatures(v []FeaturesEntry) {
	o.Features = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentRequest) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentRequest) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentRequest) SetCurrency(v string) {
	o.Currency = &v
}

func (o PaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destination"] = o.Destination
	}
	if true {
		toSerialize["payment_hash"] = o.PaymentHash
	}
	if o.NumSatoshis != nil {
		toSerialize["num_satoshis"] = o.NumSatoshis
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["expiry"] = o.Expiry
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.DescriptionHash != nil {
		toSerialize["description_hash"] = o.DescriptionHash
	}
	if o.FallbackAddr != nil {
		toSerialize["fallback_addr"] = o.FallbackAddr
	}
	if true {
		toSerialize["cltv_expiry"] = o.CltvExpiry
	}
	if o.RouteHints != nil {
		toSerialize["route_hints"] = o.RouteHints
	}
	if o.PaymentAddr != nil {
		toSerialize["payment_addr"] = o.PaymentAddr
	}
	if o.NumMsat != nil {
		toSerialize["num_msat"] = o.NumMsat
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentRequest struct {
	value *PaymentRequest
	isSet bool
}

func (v NullablePaymentRequest) Get() *PaymentRequest {
	return v.value
}

func (v *NullablePaymentRequest) Set(val *PaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentRequest(val *PaymentRequest) *NullablePaymentRequest {
	return &NullablePaymentRequest{value: val, isSet: true}
}

func (v NullablePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


