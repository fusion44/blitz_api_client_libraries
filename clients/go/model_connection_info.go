/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConnectionInfo struct for ConnectionInfo
type ConnectionInfo struct {
	// lnd macaroon with admin rights in hexstring format
	LndAdminMacaroon *string `json:"lnd_admin_macaroon,omitempty"`
	// lnd macaroon that only creates invoices in hexstring format
	LndInvoiceMacaroon *string `json:"lnd_invoice_macaroon,omitempty"`
	// lnd macaroon with only read-only rights in hexstring format
	LndReadonlyMacaroon *string `json:"lnd_readonly_macaroon,omitempty"`
	// lnd tls cert in hexstring format
	LndTlsCert *string `json:"lnd_tls_cert,omitempty"`
	// lnd rest api onion address
	LndRestOnion *string `json:"lnd_rest_onion,omitempty"`
	// connect BtcPay server locally to your lnd lightning node
	LndBtcpayConnectionString *string `json:"lnd_btcpay_connection_string,omitempty"`
	// connect Zeus app to your lnd lightning node
	LndZeusConnectionString *string `json:"lnd_zeus_connection_string,omitempty"`
	// connect Zeus app to your core lightning node over rest
	ClRestZeusConnectionString *string `json:"cl_rest_zeus_connection_string,omitempty"`
	// core lightning rest macaroon
	ClRestMacaroon *string `json:"cl_rest_macaroon,omitempty"`
	// core lightning rest onion address
	ClRestOnion *string `json:"cl_rest_onion,omitempty"`
}

// NewConnectionInfo instantiates a new ConnectionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionInfo() *ConnectionInfo {
	this := ConnectionInfo{}
	var lndAdminMacaroon string = ""
	this.LndAdminMacaroon = &lndAdminMacaroon
	var lndInvoiceMacaroon string = ""
	this.LndInvoiceMacaroon = &lndInvoiceMacaroon
	var lndReadonlyMacaroon string = ""
	this.LndReadonlyMacaroon = &lndReadonlyMacaroon
	var lndTlsCert string = ""
	this.LndTlsCert = &lndTlsCert
	var lndRestOnion string = ""
	this.LndRestOnion = &lndRestOnion
	var lndBtcpayConnectionString string = ""
	this.LndBtcpayConnectionString = &lndBtcpayConnectionString
	var lndZeusConnectionString string = ""
	this.LndZeusConnectionString = &lndZeusConnectionString
	var clRestZeusConnectionString string = ""
	this.ClRestZeusConnectionString = &clRestZeusConnectionString
	var clRestMacaroon string = ""
	this.ClRestMacaroon = &clRestMacaroon
	var clRestOnion string = ""
	this.ClRestOnion = &clRestOnion
	return &this
}

// NewConnectionInfoWithDefaults instantiates a new ConnectionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionInfoWithDefaults() *ConnectionInfo {
	this := ConnectionInfo{}
	var lndAdminMacaroon string = ""
	this.LndAdminMacaroon = &lndAdminMacaroon
	var lndInvoiceMacaroon string = ""
	this.LndInvoiceMacaroon = &lndInvoiceMacaroon
	var lndReadonlyMacaroon string = ""
	this.LndReadonlyMacaroon = &lndReadonlyMacaroon
	var lndTlsCert string = ""
	this.LndTlsCert = &lndTlsCert
	var lndRestOnion string = ""
	this.LndRestOnion = &lndRestOnion
	var lndBtcpayConnectionString string = ""
	this.LndBtcpayConnectionString = &lndBtcpayConnectionString
	var lndZeusConnectionString string = ""
	this.LndZeusConnectionString = &lndZeusConnectionString
	var clRestZeusConnectionString string = ""
	this.ClRestZeusConnectionString = &clRestZeusConnectionString
	var clRestMacaroon string = ""
	this.ClRestMacaroon = &clRestMacaroon
	var clRestOnion string = ""
	this.ClRestOnion = &clRestOnion
	return &this
}

// GetLndAdminMacaroon returns the LndAdminMacaroon field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndAdminMacaroon() string {
	if o == nil || o.LndAdminMacaroon == nil {
		var ret string
		return ret
	}
	return *o.LndAdminMacaroon
}

// GetLndAdminMacaroonOk returns a tuple with the LndAdminMacaroon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndAdminMacaroonOk() (*string, bool) {
	if o == nil || o.LndAdminMacaroon == nil {
		return nil, false
	}
	return o.LndAdminMacaroon, true
}

// HasLndAdminMacaroon returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndAdminMacaroon() bool {
	if o != nil && o.LndAdminMacaroon != nil {
		return true
	}

	return false
}

// SetLndAdminMacaroon gets a reference to the given string and assigns it to the LndAdminMacaroon field.
func (o *ConnectionInfo) SetLndAdminMacaroon(v string) {
	o.LndAdminMacaroon = &v
}

// GetLndInvoiceMacaroon returns the LndInvoiceMacaroon field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndInvoiceMacaroon() string {
	if o == nil || o.LndInvoiceMacaroon == nil {
		var ret string
		return ret
	}
	return *o.LndInvoiceMacaroon
}

// GetLndInvoiceMacaroonOk returns a tuple with the LndInvoiceMacaroon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndInvoiceMacaroonOk() (*string, bool) {
	if o == nil || o.LndInvoiceMacaroon == nil {
		return nil, false
	}
	return o.LndInvoiceMacaroon, true
}

// HasLndInvoiceMacaroon returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndInvoiceMacaroon() bool {
	if o != nil && o.LndInvoiceMacaroon != nil {
		return true
	}

	return false
}

// SetLndInvoiceMacaroon gets a reference to the given string and assigns it to the LndInvoiceMacaroon field.
func (o *ConnectionInfo) SetLndInvoiceMacaroon(v string) {
	o.LndInvoiceMacaroon = &v
}

// GetLndReadonlyMacaroon returns the LndReadonlyMacaroon field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndReadonlyMacaroon() string {
	if o == nil || o.LndReadonlyMacaroon == nil {
		var ret string
		return ret
	}
	return *o.LndReadonlyMacaroon
}

// GetLndReadonlyMacaroonOk returns a tuple with the LndReadonlyMacaroon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndReadonlyMacaroonOk() (*string, bool) {
	if o == nil || o.LndReadonlyMacaroon == nil {
		return nil, false
	}
	return o.LndReadonlyMacaroon, true
}

// HasLndReadonlyMacaroon returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndReadonlyMacaroon() bool {
	if o != nil && o.LndReadonlyMacaroon != nil {
		return true
	}

	return false
}

// SetLndReadonlyMacaroon gets a reference to the given string and assigns it to the LndReadonlyMacaroon field.
func (o *ConnectionInfo) SetLndReadonlyMacaroon(v string) {
	o.LndReadonlyMacaroon = &v
}

// GetLndTlsCert returns the LndTlsCert field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndTlsCert() string {
	if o == nil || o.LndTlsCert == nil {
		var ret string
		return ret
	}
	return *o.LndTlsCert
}

// GetLndTlsCertOk returns a tuple with the LndTlsCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndTlsCertOk() (*string, bool) {
	if o == nil || o.LndTlsCert == nil {
		return nil, false
	}
	return o.LndTlsCert, true
}

// HasLndTlsCert returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndTlsCert() bool {
	if o != nil && o.LndTlsCert != nil {
		return true
	}

	return false
}

// SetLndTlsCert gets a reference to the given string and assigns it to the LndTlsCert field.
func (o *ConnectionInfo) SetLndTlsCert(v string) {
	o.LndTlsCert = &v
}

// GetLndRestOnion returns the LndRestOnion field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndRestOnion() string {
	if o == nil || o.LndRestOnion == nil {
		var ret string
		return ret
	}
	return *o.LndRestOnion
}

// GetLndRestOnionOk returns a tuple with the LndRestOnion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndRestOnionOk() (*string, bool) {
	if o == nil || o.LndRestOnion == nil {
		return nil, false
	}
	return o.LndRestOnion, true
}

// HasLndRestOnion returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndRestOnion() bool {
	if o != nil && o.LndRestOnion != nil {
		return true
	}

	return false
}

// SetLndRestOnion gets a reference to the given string and assigns it to the LndRestOnion field.
func (o *ConnectionInfo) SetLndRestOnion(v string) {
	o.LndRestOnion = &v
}

// GetLndBtcpayConnectionString returns the LndBtcpayConnectionString field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndBtcpayConnectionString() string {
	if o == nil || o.LndBtcpayConnectionString == nil {
		var ret string
		return ret
	}
	return *o.LndBtcpayConnectionString
}

// GetLndBtcpayConnectionStringOk returns a tuple with the LndBtcpayConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndBtcpayConnectionStringOk() (*string, bool) {
	if o == nil || o.LndBtcpayConnectionString == nil {
		return nil, false
	}
	return o.LndBtcpayConnectionString, true
}

// HasLndBtcpayConnectionString returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndBtcpayConnectionString() bool {
	if o != nil && o.LndBtcpayConnectionString != nil {
		return true
	}

	return false
}

// SetLndBtcpayConnectionString gets a reference to the given string and assigns it to the LndBtcpayConnectionString field.
func (o *ConnectionInfo) SetLndBtcpayConnectionString(v string) {
	o.LndBtcpayConnectionString = &v
}

// GetLndZeusConnectionString returns the LndZeusConnectionString field value if set, zero value otherwise.
func (o *ConnectionInfo) GetLndZeusConnectionString() string {
	if o == nil || o.LndZeusConnectionString == nil {
		var ret string
		return ret
	}
	return *o.LndZeusConnectionString
}

// GetLndZeusConnectionStringOk returns a tuple with the LndZeusConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetLndZeusConnectionStringOk() (*string, bool) {
	if o == nil || o.LndZeusConnectionString == nil {
		return nil, false
	}
	return o.LndZeusConnectionString, true
}

// HasLndZeusConnectionString returns a boolean if a field has been set.
func (o *ConnectionInfo) HasLndZeusConnectionString() bool {
	if o != nil && o.LndZeusConnectionString != nil {
		return true
	}

	return false
}

// SetLndZeusConnectionString gets a reference to the given string and assigns it to the LndZeusConnectionString field.
func (o *ConnectionInfo) SetLndZeusConnectionString(v string) {
	o.LndZeusConnectionString = &v
}

// GetClRestZeusConnectionString returns the ClRestZeusConnectionString field value if set, zero value otherwise.
func (o *ConnectionInfo) GetClRestZeusConnectionString() string {
	if o == nil || o.ClRestZeusConnectionString == nil {
		var ret string
		return ret
	}
	return *o.ClRestZeusConnectionString
}

// GetClRestZeusConnectionStringOk returns a tuple with the ClRestZeusConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetClRestZeusConnectionStringOk() (*string, bool) {
	if o == nil || o.ClRestZeusConnectionString == nil {
		return nil, false
	}
	return o.ClRestZeusConnectionString, true
}

// HasClRestZeusConnectionString returns a boolean if a field has been set.
func (o *ConnectionInfo) HasClRestZeusConnectionString() bool {
	if o != nil && o.ClRestZeusConnectionString != nil {
		return true
	}

	return false
}

// SetClRestZeusConnectionString gets a reference to the given string and assigns it to the ClRestZeusConnectionString field.
func (o *ConnectionInfo) SetClRestZeusConnectionString(v string) {
	o.ClRestZeusConnectionString = &v
}

// GetClRestMacaroon returns the ClRestMacaroon field value if set, zero value otherwise.
func (o *ConnectionInfo) GetClRestMacaroon() string {
	if o == nil || o.ClRestMacaroon == nil {
		var ret string
		return ret
	}
	return *o.ClRestMacaroon
}

// GetClRestMacaroonOk returns a tuple with the ClRestMacaroon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetClRestMacaroonOk() (*string, bool) {
	if o == nil || o.ClRestMacaroon == nil {
		return nil, false
	}
	return o.ClRestMacaroon, true
}

// HasClRestMacaroon returns a boolean if a field has been set.
func (o *ConnectionInfo) HasClRestMacaroon() bool {
	if o != nil && o.ClRestMacaroon != nil {
		return true
	}

	return false
}

// SetClRestMacaroon gets a reference to the given string and assigns it to the ClRestMacaroon field.
func (o *ConnectionInfo) SetClRestMacaroon(v string) {
	o.ClRestMacaroon = &v
}

// GetClRestOnion returns the ClRestOnion field value if set, zero value otherwise.
func (o *ConnectionInfo) GetClRestOnion() string {
	if o == nil || o.ClRestOnion == nil {
		var ret string
		return ret
	}
	return *o.ClRestOnion
}

// GetClRestOnionOk returns a tuple with the ClRestOnion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionInfo) GetClRestOnionOk() (*string, bool) {
	if o == nil || o.ClRestOnion == nil {
		return nil, false
	}
	return o.ClRestOnion, true
}

// HasClRestOnion returns a boolean if a field has been set.
func (o *ConnectionInfo) HasClRestOnion() bool {
	if o != nil && o.ClRestOnion != nil {
		return true
	}

	return false
}

// SetClRestOnion gets a reference to the given string and assigns it to the ClRestOnion field.
func (o *ConnectionInfo) SetClRestOnion(v string) {
	o.ClRestOnion = &v
}

func (o ConnectionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LndAdminMacaroon != nil {
		toSerialize["lnd_admin_macaroon"] = o.LndAdminMacaroon
	}
	if o.LndInvoiceMacaroon != nil {
		toSerialize["lnd_invoice_macaroon"] = o.LndInvoiceMacaroon
	}
	if o.LndReadonlyMacaroon != nil {
		toSerialize["lnd_readonly_macaroon"] = o.LndReadonlyMacaroon
	}
	if o.LndTlsCert != nil {
		toSerialize["lnd_tls_cert"] = o.LndTlsCert
	}
	if o.LndRestOnion != nil {
		toSerialize["lnd_rest_onion"] = o.LndRestOnion
	}
	if o.LndBtcpayConnectionString != nil {
		toSerialize["lnd_btcpay_connection_string"] = o.LndBtcpayConnectionString
	}
	if o.LndZeusConnectionString != nil {
		toSerialize["lnd_zeus_connection_string"] = o.LndZeusConnectionString
	}
	if o.ClRestZeusConnectionString != nil {
		toSerialize["cl_rest_zeus_connection_string"] = o.ClRestZeusConnectionString
	}
	if o.ClRestMacaroon != nil {
		toSerialize["cl_rest_macaroon"] = o.ClRestMacaroon
	}
	if o.ClRestOnion != nil {
		toSerialize["cl_rest_onion"] = o.ClRestOnion
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionInfo struct {
	value *ConnectionInfo
	isSet bool
}

func (v NullableConnectionInfo) Get() *ConnectionInfo {
	return v.value
}

func (v *NullableConnectionInfo) Set(val *ConnectionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionInfo(val *ConnectionInfo) *NullableConnectionInfo {
	return &NullableConnectionInfo{value: val, isSet: true}
}

func (v NullableConnectionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


