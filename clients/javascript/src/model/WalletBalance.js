/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WalletBalance model module.
 * @module model/WalletBalance
 * @version 1
 */
class WalletBalance {
    /**
     * Constructs a new <code>WalletBalance</code>.
     * @alias module:model/WalletBalance
     * @param onchainConfirmedBalance {Number} Confirmed onchain balance (more than three confirmations) in sat
     * @param onchainTotalBalance {Number} Total combined onchain balance in sat
     * @param onchainUnconfirmedBalance {Number} Unconfirmed onchain balance (less than three confirmations) in sat
     * @param channelLocalBalance {Number} Sum of channels local balances in msat
     * @param channelRemoteBalance {Number} Sum of channels remote balances in msat.
     * @param channelUnsettledLocalBalance {Number} Sum of channels local unsettled balances in msat.
     * @param channelUnsettledRemoteBalance {Number} Sum of channels remote unsettled balances in msat.
     * @param channelPendingOpenLocalBalance {Number} Sum of channels pending local balances in msat.
     * @param channelPendingOpenRemoteBalance {Number} Sum of channels pending remote balances in msat.
     */
    constructor(onchainConfirmedBalance, onchainTotalBalance, onchainUnconfirmedBalance, channelLocalBalance, channelRemoteBalance, channelUnsettledLocalBalance, channelUnsettledRemoteBalance, channelPendingOpenLocalBalance, channelPendingOpenRemoteBalance) { 
        
        WalletBalance.initialize(this, onchainConfirmedBalance, onchainTotalBalance, onchainUnconfirmedBalance, channelLocalBalance, channelRemoteBalance, channelUnsettledLocalBalance, channelUnsettledRemoteBalance, channelPendingOpenLocalBalance, channelPendingOpenRemoteBalance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, onchainConfirmedBalance, onchainTotalBalance, onchainUnconfirmedBalance, channelLocalBalance, channelRemoteBalance, channelUnsettledLocalBalance, channelUnsettledRemoteBalance, channelPendingOpenLocalBalance, channelPendingOpenRemoteBalance) { 
        obj['onchain_confirmed_balance'] = onchainConfirmedBalance;
        obj['onchain_total_balance'] = onchainTotalBalance;
        obj['onchain_unconfirmed_balance'] = onchainUnconfirmedBalance;
        obj['channel_local_balance'] = channelLocalBalance;
        obj['channel_remote_balance'] = channelRemoteBalance;
        obj['channel_unsettled_local_balance'] = channelUnsettledLocalBalance;
        obj['channel_unsettled_remote_balance'] = channelUnsettledRemoteBalance;
        obj['channel_pending_open_local_balance'] = channelPendingOpenLocalBalance;
        obj['channel_pending_open_remote_balance'] = channelPendingOpenRemoteBalance;
    }

    /**
     * Constructs a <code>WalletBalance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WalletBalance} obj Optional instance to populate.
     * @return {module:model/WalletBalance} The populated <code>WalletBalance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletBalance();

            if (data.hasOwnProperty('onchain_confirmed_balance')) {
                obj['onchain_confirmed_balance'] = ApiClient.convertToType(data['onchain_confirmed_balance'], 'Number');
            }
            if (data.hasOwnProperty('onchain_total_balance')) {
                obj['onchain_total_balance'] = ApiClient.convertToType(data['onchain_total_balance'], 'Number');
            }
            if (data.hasOwnProperty('onchain_unconfirmed_balance')) {
                obj['onchain_unconfirmed_balance'] = ApiClient.convertToType(data['onchain_unconfirmed_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_local_balance')) {
                obj['channel_local_balance'] = ApiClient.convertToType(data['channel_local_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_remote_balance')) {
                obj['channel_remote_balance'] = ApiClient.convertToType(data['channel_remote_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_unsettled_local_balance')) {
                obj['channel_unsettled_local_balance'] = ApiClient.convertToType(data['channel_unsettled_local_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_unsettled_remote_balance')) {
                obj['channel_unsettled_remote_balance'] = ApiClient.convertToType(data['channel_unsettled_remote_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_pending_open_local_balance')) {
                obj['channel_pending_open_local_balance'] = ApiClient.convertToType(data['channel_pending_open_local_balance'], 'Number');
            }
            if (data.hasOwnProperty('channel_pending_open_remote_balance')) {
                obj['channel_pending_open_remote_balance'] = ApiClient.convertToType(data['channel_pending_open_remote_balance'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Confirmed onchain balance (more than three confirmations) in sat
 * @member {Number} onchain_confirmed_balance
 */
WalletBalance.prototype['onchain_confirmed_balance'] = undefined;

/**
 * Total combined onchain balance in sat
 * @member {Number} onchain_total_balance
 */
WalletBalance.prototype['onchain_total_balance'] = undefined;

/**
 * Unconfirmed onchain balance (less than three confirmations) in sat
 * @member {Number} onchain_unconfirmed_balance
 */
WalletBalance.prototype['onchain_unconfirmed_balance'] = undefined;

/**
 * Sum of channels local balances in msat
 * @member {Number} channel_local_balance
 */
WalletBalance.prototype['channel_local_balance'] = undefined;

/**
 * Sum of channels remote balances in msat.
 * @member {Number} channel_remote_balance
 */
WalletBalance.prototype['channel_remote_balance'] = undefined;

/**
 * Sum of channels local unsettled balances in msat.
 * @member {Number} channel_unsettled_local_balance
 */
WalletBalance.prototype['channel_unsettled_local_balance'] = undefined;

/**
 * Sum of channels remote unsettled balances in msat.
 * @member {Number} channel_unsettled_remote_balance
 */
WalletBalance.prototype['channel_unsettled_remote_balance'] = undefined;

/**
 * Sum of channels pending local balances in msat.
 * @member {Number} channel_pending_open_local_balance
 */
WalletBalance.prototype['channel_pending_open_local_balance'] = undefined;

/**
 * Sum of channels pending remote balances in msat.
 * @member {Number} channel_pending_open_remote_balance
 */
WalletBalance.prototype['channel_pending_open_remote_balance'] = undefined;






export default WalletBalance;

