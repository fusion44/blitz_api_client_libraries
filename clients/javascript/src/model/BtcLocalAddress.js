/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BtcLocalAddress model module.
 * @module model/BtcLocalAddress
 * @version 1
 */
class BtcLocalAddress {
    /**
     * Constructs a new <code>BtcLocalAddress</code>.
     * @alias module:model/BtcLocalAddress
     * @param address {String} Network address
     * @param port {Number} Network port
     * @param score {Number} Relative score
     */
    constructor(address, port, score) { 
        
        BtcLocalAddress.initialize(this, address, port, score);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, port, score) { 
        obj['address'] = address;
        obj['port'] = port;
        obj['score'] = score;
    }

    /**
     * Constructs a <code>BtcLocalAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BtcLocalAddress} obj Optional instance to populate.
     * @return {module:model/BtcLocalAddress} The populated <code>BtcLocalAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BtcLocalAddress();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Network address
 * @member {String} address
 */
BtcLocalAddress.prototype['address'] = undefined;

/**
 * Network port
 * @member {Number} port
 */
BtcLocalAddress.prototype['port'] = undefined;

/**
 * Relative score
 * @member {Number} score
 */
BtcLocalAddress.prototype['score'] = undefined;






export default BtcLocalAddress;

