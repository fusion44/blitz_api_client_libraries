/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartDoneData model module.
 * @module model/StartDoneData
 * @version 1
 */
class StartDoneData {
    /**
     * Constructs a new <code>StartDoneData</code>.
     * @alias module:model/StartDoneData
     */
    constructor() { 
        
        StartDoneData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StartDoneData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartDoneData} obj Optional instance to populate.
     * @return {module:model/StartDoneData} The populated <code>StartDoneData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartDoneData();

            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('forceFreshSetup')) {
                obj['forceFreshSetup'] = ApiClient.convertToType(data['forceFreshSetup'], 'Boolean');
            }
            if (data.hasOwnProperty('keepBlockchain')) {
                obj['keepBlockchain'] = ApiClient.convertToType(data['keepBlockchain'], 'Boolean');
            }
            if (data.hasOwnProperty('lightning')) {
                obj['lightning'] = ApiClient.convertToType(data['lightning'], 'String');
            }
            if (data.hasOwnProperty('passwordA')) {
                obj['passwordA'] = ApiClient.convertToType(data['passwordA'], 'String');
            }
            if (data.hasOwnProperty('passwordB')) {
                obj['passwordB'] = ApiClient.convertToType(data['passwordB'], 'String');
            }
            if (data.hasOwnProperty('passwordC')) {
                obj['passwordC'] = ApiClient.convertToType(data['passwordC'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} hostname
 * @default ''
 */
StartDoneData.prototype['hostname'] = '';

/**
 * @member {Boolean} forceFreshSetup
 * @default false
 */
StartDoneData.prototype['forceFreshSetup'] = false;

/**
 * @member {Boolean} keepBlockchain
 * @default true
 */
StartDoneData.prototype['keepBlockchain'] = true;

/**
 * @member {String} lightning
 * @default ''
 */
StartDoneData.prototype['lightning'] = '';

/**
 * @member {String} passwordA
 * @default ''
 */
StartDoneData.prototype['passwordA'] = '';

/**
 * @member {String} passwordB
 * @default ''
 */
StartDoneData.prototype['passwordB'] = '';

/**
 * @member {String} passwordC
 * @default ''
 */
StartDoneData.prototype['passwordC'] = '';






export default StartDoneData;

