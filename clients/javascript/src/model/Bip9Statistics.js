/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Bip9Statistics model module.
 * @module model/Bip9Statistics
 * @version 1
 */
class Bip9Statistics {
    /**
     * Constructs a new <code>Bip9Statistics</code>.
     * @alias module:model/Bip9Statistics
     * @param period {Number} The length in blocks of the BIP9 signalling period
     * @param threshold {Number} The number of blocks with the version bit set required to activate the feature
     * @param elapsed {Number} The number of blocks elapsed since the beginning of the current period
     * @param count {Number} The number of blocks with the version bit set in the current period
     * @param possible {Boolean} False if there are not enough blocks left in this period to pass activation threshold
     */
    constructor(period, threshold, elapsed, count, possible) { 
        
        Bip9Statistics.initialize(this, period, threshold, elapsed, count, possible);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, period, threshold, elapsed, count, possible) { 
        obj['period'] = period;
        obj['threshold'] = threshold;
        obj['elapsed'] = elapsed;
        obj['count'] = count;
        obj['possible'] = possible;
    }

    /**
     * Constructs a <code>Bip9Statistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bip9Statistics} obj Optional instance to populate.
     * @return {module:model/Bip9Statistics} The populated <code>Bip9Statistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bip9Statistics();

            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'Number');
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('elapsed')) {
                obj['elapsed'] = ApiClient.convertToType(data['elapsed'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('possible')) {
                obj['possible'] = ApiClient.convertToType(data['possible'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The length in blocks of the BIP9 signalling period
 * @member {Number} period
 */
Bip9Statistics.prototype['period'] = undefined;

/**
 * The number of blocks with the version bit set required to activate the feature
 * @member {Number} threshold
 */
Bip9Statistics.prototype['threshold'] = undefined;

/**
 * The number of blocks elapsed since the beginning of the current period
 * @member {Number} elapsed
 */
Bip9Statistics.prototype['elapsed'] = undefined;

/**
 * The number of blocks with the version bit set in the current period
 * @member {Number} count
 */
Bip9Statistics.prototype['count'] = undefined;

/**
 * False if there are not enough blocks left in this period to pass activation threshold
 * @member {Boolean} possible
 */
Bip9Statistics.prototype['possible'] = undefined;






export default Bip9Statistics;

