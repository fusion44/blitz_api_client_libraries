/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelUpdate model module.
 * @module model/ChannelUpdate
 * @version 1
 */
class ChannelUpdate {
    /**
     * Constructs a new <code>ChannelUpdate</code>.
     * @alias module:model/ChannelUpdate
     * @param signature {String} 
     * @param chainHash {String} 
     * @param chanId {Number} 
     * @param timestamp {Number} 
     * @param messageFlags {Number} 
     * @param channelFlags {Number} 
     * @param timeLockDelta {Number} 
     * @param htlcMinimumMsat {Number} 
     * @param baseFee {Number} 
     * @param feeRate {Number} 
     * @param htlcMaximumMsat {Number} 
     * @param extraOpaqueData {String} 
     */
    constructor(signature, chainHash, chanId, timestamp, messageFlags, channelFlags, timeLockDelta, htlcMinimumMsat, baseFee, feeRate, htlcMaximumMsat, extraOpaqueData) { 
        
        ChannelUpdate.initialize(this, signature, chainHash, chanId, timestamp, messageFlags, channelFlags, timeLockDelta, htlcMinimumMsat, baseFee, feeRate, htlcMaximumMsat, extraOpaqueData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, signature, chainHash, chanId, timestamp, messageFlags, channelFlags, timeLockDelta, htlcMinimumMsat, baseFee, feeRate, htlcMaximumMsat, extraOpaqueData) { 
        obj['signature'] = signature;
        obj['chain_hash'] = chainHash;
        obj['chan_id'] = chanId;
        obj['timestamp'] = timestamp;
        obj['message_flags'] = messageFlags;
        obj['channel_flags'] = channelFlags;
        obj['time_lock_delta'] = timeLockDelta;
        obj['htlc_minimum_msat'] = htlcMinimumMsat;
        obj['base_fee'] = baseFee;
        obj['fee_rate'] = feeRate;
        obj['htlc_maximum_msat'] = htlcMaximumMsat;
        obj['extra_opaque_data'] = extraOpaqueData;
    }

    /**
     * Constructs a <code>ChannelUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelUpdate} obj Optional instance to populate.
     * @return {module:model/ChannelUpdate} The populated <code>ChannelUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelUpdate();

            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
            if (data.hasOwnProperty('chain_hash')) {
                obj['chain_hash'] = ApiClient.convertToType(data['chain_hash'], 'String');
            }
            if (data.hasOwnProperty('chan_id')) {
                obj['chan_id'] = ApiClient.convertToType(data['chan_id'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('message_flags')) {
                obj['message_flags'] = ApiClient.convertToType(data['message_flags'], 'Number');
            }
            if (data.hasOwnProperty('channel_flags')) {
                obj['channel_flags'] = ApiClient.convertToType(data['channel_flags'], 'Number');
            }
            if (data.hasOwnProperty('time_lock_delta')) {
                obj['time_lock_delta'] = ApiClient.convertToType(data['time_lock_delta'], 'Number');
            }
            if (data.hasOwnProperty('htlc_minimum_msat')) {
                obj['htlc_minimum_msat'] = ApiClient.convertToType(data['htlc_minimum_msat'], 'Number');
            }
            if (data.hasOwnProperty('base_fee')) {
                obj['base_fee'] = ApiClient.convertToType(data['base_fee'], 'Number');
            }
            if (data.hasOwnProperty('fee_rate')) {
                obj['fee_rate'] = ApiClient.convertToType(data['fee_rate'], 'Number');
            }
            if (data.hasOwnProperty('htlc_maximum_msat')) {
                obj['htlc_maximum_msat'] = ApiClient.convertToType(data['htlc_maximum_msat'], 'Number');
            }
            if (data.hasOwnProperty('extra_opaque_data')) {
                obj['extra_opaque_data'] = ApiClient.convertToType(data['extra_opaque_data'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} signature
 */
ChannelUpdate.prototype['signature'] = undefined;

/**
 * @member {String} chain_hash
 */
ChannelUpdate.prototype['chain_hash'] = undefined;

/**
 * @member {Number} chan_id
 */
ChannelUpdate.prototype['chan_id'] = undefined;

/**
 * @member {Number} timestamp
 */
ChannelUpdate.prototype['timestamp'] = undefined;

/**
 * @member {Number} message_flags
 */
ChannelUpdate.prototype['message_flags'] = undefined;

/**
 * @member {Number} channel_flags
 */
ChannelUpdate.prototype['channel_flags'] = undefined;

/**
 * @member {Number} time_lock_delta
 */
ChannelUpdate.prototype['time_lock_delta'] = undefined;

/**
 * @member {Number} htlc_minimum_msat
 */
ChannelUpdate.prototype['htlc_minimum_msat'] = undefined;

/**
 * @member {Number} base_fee
 */
ChannelUpdate.prototype['base_fee'] = undefined;

/**
 * @member {Number} fee_rate
 */
ChannelUpdate.prototype['fee_rate'] = undefined;

/**
 * @member {Number} htlc_maximum_msat
 */
ChannelUpdate.prototype['htlc_maximum_msat'] = undefined;

/**
 * @member {String} extra_opaque_data
 */
ChannelUpdate.prototype['extra_opaque_data'] = undefined;






export default ChannelUpdate;

