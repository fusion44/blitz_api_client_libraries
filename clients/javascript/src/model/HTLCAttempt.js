/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HTLCAttemptFailure from './HTLCAttemptFailure';
import HTLCStatus from './HTLCStatus';
import Route from './Route';

/**
 * The HTLCAttempt model module.
 * @module model/HTLCAttempt
 * @version 1
 */
class HTLCAttempt {
    /**
     * Constructs a new <code>HTLCAttempt</code>.
     * @alias module:model/HTLCAttempt
     * @param attemptId {Number} 
     * @param status {module:model/HTLCStatus} 
     * @param route {module:model/Route} 
     * @param attemptTimeNs {Number} 
     * @param resolveTimeNs {Number} 
     * @param failure {module:model/HTLCAttemptFailure} 
     * @param preimage {String} 
     */
    constructor(attemptId, status, route, attemptTimeNs, resolveTimeNs, failure, preimage) { 
        
        HTLCAttempt.initialize(this, attemptId, status, route, attemptTimeNs, resolveTimeNs, failure, preimage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attemptId, status, route, attemptTimeNs, resolveTimeNs, failure, preimage) { 
        obj['attempt_id'] = attemptId;
        obj['status'] = status;
        obj['route'] = route;
        obj['attempt_time_ns'] = attemptTimeNs;
        obj['resolve_time_ns'] = resolveTimeNs;
        obj['failure'] = failure;
        obj['preimage'] = preimage;
    }

    /**
     * Constructs a <code>HTLCAttempt</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HTLCAttempt} obj Optional instance to populate.
     * @return {module:model/HTLCAttempt} The populated <code>HTLCAttempt</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HTLCAttempt();

            if (data.hasOwnProperty('attempt_id')) {
                obj['attempt_id'] = ApiClient.convertToType(data['attempt_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = HTLCStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('route')) {
                obj['route'] = Route.constructFromObject(data['route']);
            }
            if (data.hasOwnProperty('attempt_time_ns')) {
                obj['attempt_time_ns'] = ApiClient.convertToType(data['attempt_time_ns'], 'Number');
            }
            if (data.hasOwnProperty('resolve_time_ns')) {
                obj['resolve_time_ns'] = ApiClient.convertToType(data['resolve_time_ns'], 'Number');
            }
            if (data.hasOwnProperty('failure')) {
                obj['failure'] = HTLCAttemptFailure.constructFromObject(data['failure']);
            }
            if (data.hasOwnProperty('preimage')) {
                obj['preimage'] = ApiClient.convertToType(data['preimage'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} attempt_id
 */
HTLCAttempt.prototype['attempt_id'] = undefined;

/**
 * @member {module:model/HTLCStatus} status
 */
HTLCAttempt.prototype['status'] = undefined;

/**
 * @member {module:model/Route} route
 */
HTLCAttempt.prototype['route'] = undefined;

/**
 * @member {Number} attempt_time_ns
 */
HTLCAttempt.prototype['attempt_time_ns'] = undefined;

/**
 * @member {Number} resolve_time_ns
 */
HTLCAttempt.prototype['resolve_time_ns'] = undefined;

/**
 * @member {module:model/HTLCAttemptFailure} failure
 */
HTLCAttempt.prototype['failure'] = undefined;

/**
 * @member {String} preimage
 */
HTLCAttempt.prototype['preimage'] = undefined;






export default HTLCAttempt;

