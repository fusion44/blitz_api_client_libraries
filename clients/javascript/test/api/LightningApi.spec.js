/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.LightningApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LightningApi', function() {
    describe('lightningAddInvoiceLightningAddInvoicePost', function() {
      it('should call lightningAddInvoiceLightningAddInvoicePost successfully', function(done) {
        //uncomment below and update the code to test lightningAddInvoiceLightningAddInvoicePost
        //instance.lightningAddInvoiceLightningAddInvoicePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningCloseChannelLightningCloseChannelPost', function() {
      it('should call lightningCloseChannelLightningCloseChannelPost successfully', function(done) {
        //uncomment below and update the code to test lightningCloseChannelLightningCloseChannelPost
        //instance.lightningCloseChannelLightningCloseChannelPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningDecodePayReqLightningDecodePayReqGet', function() {
      it('should call lightningDecodePayReqLightningDecodePayReqGet successfully', function(done) {
        //uncomment below and update the code to test lightningDecodePayReqLightningDecodePayReqGet
        //instance.lightningDecodePayReqLightningDecodePayReqGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningGetBalanceLightningGetBalanceGet', function() {
      it('should call lightningGetBalanceLightningGetBalanceGet successfully', function(done) {
        //uncomment below and update the code to test lightningGetBalanceLightningGetBalanceGet
        //instance.lightningGetBalanceLightningGetBalanceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningGetFeeRevenueLightningGetFeeRevenueGet', function() {
      it('should call lightningGetFeeRevenueLightningGetFeeRevenueGet successfully', function(done) {
        //uncomment below and update the code to test lightningGetFeeRevenueLightningGetFeeRevenueGet
        //instance.lightningGetFeeRevenueLightningGetFeeRevenueGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningGetInfoLightningGetInfoGet', function() {
      it('should call lightningGetInfoLightningGetInfoGet successfully', function(done) {
        //uncomment below and update the code to test lightningGetInfoLightningGetInfoGet
        //instance.lightningGetInfoLightningGetInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningGetInfoLiteLightningGetInfoLiteGet', function() {
      it('should call lightningGetInfoLiteLightningGetInfoLiteGet successfully', function(done) {
        //uncomment below and update the code to test lightningGetInfoLiteLightningGetInfoLiteGet
        //instance.lightningGetInfoLiteLightningGetInfoLiteGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningListAllTxLightningListAllTxGet', function() {
      it('should call lightningListAllTxLightningListAllTxGet successfully', function(done) {
        //uncomment below and update the code to test lightningListAllTxLightningListAllTxGet
        //instance.lightningListAllTxLightningListAllTxGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningListChannelsLightningListChannelsGet', function() {
      it('should call lightningListChannelsLightningListChannelsGet successfully', function(done) {
        //uncomment below and update the code to test lightningListChannelsLightningListChannelsGet
        //instance.lightningListChannelsLightningListChannelsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningListInvoicesLightningListInvoicesGet', function() {
      it('should call lightningListInvoicesLightningListInvoicesGet successfully', function(done) {
        //uncomment below and update the code to test lightningListInvoicesLightningListInvoicesGet
        //instance.lightningListInvoicesLightningListInvoicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningListOnchainTxLightningListOnchainTxGet', function() {
      it('should call lightningListOnchainTxLightningListOnchainTxGet successfully', function(done) {
        //uncomment below and update the code to test lightningListOnchainTxLightningListOnchainTxGet
        //instance.lightningListOnchainTxLightningListOnchainTxGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningListPaymentsLightningListPaymentsGet', function() {
      it('should call lightningListPaymentsLightningListPaymentsGet successfully', function(done) {
        //uncomment below and update the code to test lightningListPaymentsLightningListPaymentsGet
        //instance.lightningListPaymentsLightningListPaymentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningNewAddressLightningNewAddressPost', function() {
      it('should call lightningNewAddressLightningNewAddressPost successfully', function(done) {
        //uncomment below and update the code to test lightningNewAddressLightningNewAddressPost
        //instance.lightningNewAddressLightningNewAddressPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningOpenChannelLightningOpenChannelPost', function() {
      it('should call lightningOpenChannelLightningOpenChannelPost successfully', function(done) {
        //uncomment below and update the code to test lightningOpenChannelLightningOpenChannelPost
        //instance.lightningOpenChannelLightningOpenChannelPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningSendCoinsLightningSendCoinsPost', function() {
      it('should call lightningSendCoinsLightningSendCoinsPost successfully', function(done) {
        //uncomment below and update the code to test lightningSendCoinsLightningSendCoinsPost
        //instance.lightningSendCoinsLightningSendCoinsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningSendPaymentLightningSendPaymentPost', function() {
      it('should call lightningSendPaymentLightningSendPaymentPost successfully', function(done) {
        //uncomment below and update the code to test lightningSendPaymentLightningSendPaymentPost
        //instance.lightningSendPaymentLightningSendPaymentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lightningUnlockWalletLightningUnlockWalletPost', function() {
      it('should call lightningUnlockWalletLightningUnlockWalletPost successfully', function(done) {
        //uncomment below and update the code to test lightningUnlockWalletLightningUnlockWalletPost
        //instance.lightningUnlockWalletLightningUnlockWalletPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
